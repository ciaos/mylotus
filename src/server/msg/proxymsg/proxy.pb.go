// Code generated by protoc-gen-go.
// source: proxy.proto
// DO NOT EDIT!

/*
Package proxymsg is a generated protocol buffer package.

It is generated from these files:
	proxy.proto

It has these top-level messages:
	InternalMessage
	Proxy_GS_BS_SyncPlayerInfo
	Proxy_GS_MS_Match
	Proxy_MS_BS_AllocBattleRoom
	Proxy_MS_GS_MatchResult
	Proxy_BS_MS_AllocBattleRoom
	Proxy_BS_GS_SyncPlayerInfo
*/
package proxymsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProxyMessageType int32

const (
	ProxyMessageType_PMT_GS_BS_SYNCPLAYERINFO  ProxyMessageType = 0
	ProxyMessageType_PMT_GS_MS_MATCH           ProxyMessageType = 1
	ProxyMessageType_PMT_MS_BS_ALLOCBATTLEROOM ProxyMessageType = 2
	ProxyMessageType_PMT_MS_GS_MATCHRESULT     ProxyMessageType = 3
	ProxyMessageType_PMT_BS_MS_ALLOCBATTLEROOM ProxyMessageType = 4
	ProxyMessageType_PMT_BS_GS_SYNCPLAYERINFO  ProxyMessageType = 5
)

var ProxyMessageType_name = map[int32]string{
	0: "PMT_GS_BS_SYNCPLAYERINFO",
	1: "PMT_GS_MS_MATCH",
	2: "PMT_MS_BS_ALLOCBATTLEROOM",
	3: "PMT_MS_GS_MATCHRESULT",
	4: "PMT_BS_MS_ALLOCBATTLEROOM",
	5: "PMT_BS_GS_SYNCPLAYERINFO",
}
var ProxyMessageType_value = map[string]int32{
	"PMT_GS_BS_SYNCPLAYERINFO":  0,
	"PMT_GS_MS_MATCH":           1,
	"PMT_MS_BS_ALLOCBATTLEROOM": 2,
	"PMT_MS_GS_MATCHRESULT":     3,
	"PMT_BS_MS_ALLOCBATTLEROOM": 4,
	"PMT_BS_GS_SYNCPLAYERINFO":  5,
}

func (x ProxyMessageType) String() string {
	return proto.EnumName(ProxyMessageType_name, int32(x))
}
func (ProxyMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// proxy message protocol
type InternalMessage struct {
	Fromid   int32  `protobuf:"varint,1,opt,name=fromid" json:"fromid,omitempty"`
	Fromtype string `protobuf:"bytes,2,opt,name=fromtype" json:"fromtype,omitempty"`
	Toid     int32  `protobuf:"varint,3,opt,name=toid" json:"toid,omitempty"`
	Totype   string `protobuf:"bytes,4,opt,name=totype" json:"totype,omitempty"`
	Charid   string `protobuf:"bytes,5,opt,name=charid" json:"charid,omitempty"`
	Msgid    uint32 `protobuf:"varint,6,opt,name=msgid" json:"msgid,omitempty"`
	Msgdata  []byte `protobuf:"bytes,7,opt,name=msgdata,proto3" json:"msgdata,omitempty"`
}

func (m *InternalMessage) Reset()                    { *m = InternalMessage{} }
func (m *InternalMessage) String() string            { return proto.CompactTextString(m) }
func (*InternalMessage) ProtoMessage()               {}
func (*InternalMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Proxy_GS_BS_SyncPlayerInfo struct {
	Charid       string `protobuf:"bytes,1,opt,name=charid" json:"charid,omitempty"`
	Chartype     int32  `protobuf:"varint,2,opt,name=chartype" json:"chartype,omitempty"`
	Charname     string `protobuf:"bytes,3,opt,name=charname" json:"charname,omitempty"`
	Teamtype     int32  `protobuf:"varint,4,opt,name=teamtype" json:"teamtype,omitempty"`
	Battleroomid int32  `protobuf:"varint,5,opt,name=battleroomid" json:"battleroomid,omitempty"`
}

func (m *Proxy_GS_BS_SyncPlayerInfo) Reset()                    { *m = Proxy_GS_BS_SyncPlayerInfo{} }
func (m *Proxy_GS_BS_SyncPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_BS_SyncPlayerInfo) ProtoMessage()               {}
func (*Proxy_GS_BS_SyncPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Proxy_GS_MS_Match struct {
	Charid    string `protobuf:"bytes,1,opt,name=charid" json:"charid,omitempty"`
	Matchmode int32  `protobuf:"varint,2,opt,name=matchmode" json:"matchmode,omitempty"`
	Action    int32  `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
}

func (m *Proxy_GS_MS_Match) Reset()                    { *m = Proxy_GS_MS_Match{} }
func (m *Proxy_GS_MS_Match) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Match) ProtoMessage()               {}
func (*Proxy_GS_MS_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Proxy_MS_BS_AllocBattleRoom struct {
	Matchmode   int32 `protobuf:"varint,1,opt,name=matchmode" json:"matchmode,omitempty"`
	Matchroomid int32 `protobuf:"varint,2,opt,name=matchroomid" json:"matchroomid,omitempty"`
	Membercnt   int32 `protobuf:"varint,3,opt,name=membercnt" json:"membercnt,omitempty"`
}

func (m *Proxy_MS_BS_AllocBattleRoom) Reset()                    { *m = Proxy_MS_BS_AllocBattleRoom{} }
func (m *Proxy_MS_BS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_BS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_MS_BS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Proxy_MS_GS_MatchResult struct {
	Retcode          int32  `protobuf:"varint,1,opt,name=retcode" json:"retcode,omitempty"`
	Battleroomid     int32  `protobuf:"varint,2,opt,name=battleroomid" json:"battleroomid,omitempty"`
	Battleserverid   int32  `protobuf:"varint,3,opt,name=battleserverid" json:"battleserverid,omitempty"`
	Battleservername string `protobuf:"bytes,4,opt,name=battleservername" json:"battleservername,omitempty"`
}

func (m *Proxy_MS_GS_MatchResult) Reset()                    { *m = Proxy_MS_GS_MatchResult{} }
func (m *Proxy_MS_GS_MatchResult) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_GS_MatchResult) ProtoMessage()               {}
func (*Proxy_MS_GS_MatchResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Proxy_BS_MS_AllocBattleRoom struct {
	Retcode          int32  `protobuf:"varint,1,opt,name=retcode" json:"retcode,omitempty"`
	Matchroomid      int32  `protobuf:"varint,2,opt,name=matchroomid" json:"matchroomid,omitempty"`
	Battleroomid     int32  `protobuf:"varint,3,opt,name=battleroomid" json:"battleroomid,omitempty"`
	Battleserverid   int32  `protobuf:"varint,4,opt,name=battleserverid" json:"battleserverid,omitempty"`
	Battleservername string `protobuf:"bytes,5,opt,name=battleservername" json:"battleservername,omitempty"`
}

func (m *Proxy_BS_MS_AllocBattleRoom) Reset()                    { *m = Proxy_BS_MS_AllocBattleRoom{} }
func (m *Proxy_BS_MS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_MS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_BS_MS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Proxy_BS_GS_SyncPlayerInfo struct {
	Retcode       int32  `protobuf:"varint,1,opt,name=retcode" json:"retcode,omitempty"`
	Battleroomid  int32  `protobuf:"varint,2,opt,name=battleroomid" json:"battleroomid,omitempty"`
	Battleroomkey []byte `protobuf:"bytes,3,opt,name=battleroomkey,proto3" json:"battleroomkey,omitempty"`
	Connectaddr   string `protobuf:"bytes,4,opt,name=connectaddr" json:"connectaddr,omitempty"`
}

func (m *Proxy_BS_GS_SyncPlayerInfo) Reset()                    { *m = Proxy_BS_GS_SyncPlayerInfo{} }
func (m *Proxy_BS_GS_SyncPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_GS_SyncPlayerInfo) ProtoMessage()               {}
func (*Proxy_BS_GS_SyncPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*InternalMessage)(nil), "proxymsg.InternalMessage")
	proto.RegisterType((*Proxy_GS_BS_SyncPlayerInfo)(nil), "proxymsg.Proxy_GS_BS_SyncPlayerInfo")
	proto.RegisterType((*Proxy_GS_MS_Match)(nil), "proxymsg.Proxy_GS_MS_Match")
	proto.RegisterType((*Proxy_MS_BS_AllocBattleRoom)(nil), "proxymsg.Proxy_MS_BS_AllocBattleRoom")
	proto.RegisterType((*Proxy_MS_GS_MatchResult)(nil), "proxymsg.Proxy_MS_GS_MatchResult")
	proto.RegisterType((*Proxy_BS_MS_AllocBattleRoom)(nil), "proxymsg.Proxy_BS_MS_AllocBattleRoom")
	proto.RegisterType((*Proxy_BS_GS_SyncPlayerInfo)(nil), "proxymsg.Proxy_BS_GS_SyncPlayerInfo")
	proto.RegisterEnum("proxymsg.ProxyMessageType", ProxyMessageType_name, ProxyMessageType_value)
}

var fileDescriptor0 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x6d, 0xd3, 0xad, 0x67, 0x1d, 0x0b, 0xe6, 0xaf, 0x1b, 0x43, 0x9a, 0x22, 0x84, 0xd0,
	0x2e, 0xb8, 0xe1, 0x09, 0xda, 0xaa, 0x94, 0x4a, 0xed, 0x5a, 0xb9, 0xe1, 0x62, 0x57, 0x95, 0x9b,
	0x7a, 0x3f, 0x22, 0x89, 0x27, 0xc7, 0x20, 0x22, 0xde, 0x86, 0x5b, 0x78, 0x01, 0x24, 0x5e, 0x82,
	0x37, 0xc2, 0x76, 0x9c, 0xb4, 0x49, 0x55, 0x31, 0x09, 0xa9, 0xaa, 0xfc, 0x7d, 0xc7, 0xc7, 0xe7,
	0x7c, 0xdf, 0xb1, 0x03, 0x07, 0x77, 0x82, 0x7f, 0x4d, 0xdf, 0xaa, 0x7f, 0xc9, 0xf1, 0xbe, 0x01,
	0x51, 0x72, 0xed, 0xfd, 0x42, 0x70, 0x34, 0x8a, 0x25, 0x13, 0x31, 0x0d, 0x27, 0x2c, 0x49, 0xe8,
	0x35, 0xc3, 0xcf, 0xa0, 0x79, 0x25, 0x78, 0x74, 0xbb, 0xea, 0xa0, 0x33, 0xf4, 0xc6, 0x21, 0x16,
	0xe1, 0x13, 0xd8, 0xd7, 0x2b, 0x99, 0xde, 0xb1, 0x4e, 0x4d, 0x45, 0x5a, 0xa4, 0xc0, 0x18, 0x43,
	0x43, 0x72, 0x95, 0x51, 0x37, 0x19, 0x66, 0xad, 0xcf, 0x91, 0xdc, 0xec, 0x6e, 0x98, 0xdd, 0x16,
	0x69, 0x3e, 0xb8, 0xa1, 0x42, 0xed, 0x76, 0x32, 0x3e, 0x43, 0xf8, 0x09, 0x38, 0xaa, 0x25, 0x45,
	0x37, 0x15, 0x7d, 0x48, 0x32, 0x80, 0x3b, 0xb0, 0xa7, 0x16, 0x2b, 0x2a, 0x69, 0x67, 0x4f, 0xf1,
	0x6d, 0x92, 0x43, 0xef, 0x27, 0x82, 0x93, 0x99, 0x16, 0xb2, 0x18, 0xce, 0x17, 0xbd, 0xf9, 0x62,
	0x9e, 0xc6, 0xc1, 0x2c, 0xa4, 0x29, 0x13, 0xa3, 0xf8, 0x8a, 0x6f, 0x94, 0x41, 0xa5, 0x32, 0x4a,
	0x86, 0x5e, 0x15, 0x32, 0x1c, 0x52, 0xe0, 0x3c, 0x16, 0xd3, 0x88, 0x19, 0x29, 0x2d, 0x52, 0x60,
	0x1d, 0x93, 0x8c, 0x46, 0x85, 0x20, 0x95, 0x97, 0x63, 0xec, 0x41, 0x7b, 0x49, 0xa5, 0x0c, 0x99,
	0xe0, 0xc6, 0x38, 0xc7, 0xc4, 0x4b, 0x9c, 0x47, 0xe1, 0x51, 0xd1, 0xed, 0x44, 0xfd, 0xa8, 0x0c,
	0x6e, 0x76, 0x36, 0x79, 0x0a, 0xad, 0x48, 0x6f, 0x88, 0xf8, 0x2a, 0xef, 0x72, 0x4d, 0xe8, 0x2c,
	0x1a, 0xc8, 0x5b, 0x1e, 0x5b, 0xbf, 0x2d, 0xf2, 0xbe, 0xc1, 0x8b, 0xac, 0xc4, 0xc4, 0x18, 0xd2,
	0x0d, 0x43, 0x1e, 0xf4, 0x4c, 0x0f, 0x44, 0xf5, 0x50, 0x3e, 0x14, 0x55, 0x0f, 0x3d, 0x83, 0x03,
	0x03, 0xac, 0x84, 0xac, 0xe8, 0x26, 0x65, 0xf2, 0x59, 0xb4, 0x64, 0x22, 0x88, 0xa5, 0xad, 0xbc,
	0x26, 0xbc, 0x1f, 0x08, 0x9e, 0x17, 0xd5, 0x87, 0x56, 0x20, 0x61, 0xc9, 0xe7, 0x50, 0xea, 0x21,
	0x0a, 0x26, 0x83, 0x75, 0xdd, 0x1c, 0x6e, 0x39, 0x57, 0xdb, 0x76, 0x0e, 0xbf, 0x86, 0x87, 0x19,
	0x4e, 0x98, 0xf8, 0xc2, 0x44, 0x71, 0xcd, 0x2a, 0x2c, 0x3e, 0x07, 0x77, 0x93, 0x31, 0x53, 0xcc,
	0xae, 0xde, 0x16, 0xef, 0xfd, 0x41, 0xb9, 0x57, 0x3d, 0x33, 0x8e, 0xaa, 0x57, 0xbb, 0x3b, 0xfe,
	0xb7, 0x4f, 0x55, 0x4d, 0xf5, 0x7b, 0x69, 0x6a, 0xdc, 0x5b, 0x93, 0xb3, 0x43, 0xd3, 0xf7, 0xe2,
	0x41, 0xf4, 0xcc, 0x04, 0x2a, 0x0f, 0xe2, 0xff, 0x86, 0xf0, 0x0a, 0x0e, 0xd7, 0xf8, 0x13, 0x4b,
	0x8d, 0xaa, 0x36, 0x29, 0x93, 0xda, 0x9c, 0x80, 0xc7, 0x31, 0x0b, 0x24, 0x5d, 0xad, 0x84, 0x75,
	0x7f, 0x93, 0x3a, 0xff, 0x8d, 0xc0, 0x35, 0x4d, 0xda, 0xcf, 0x8d, 0xaf, 0xdf, 0xcf, 0x29, 0x74,
	0x66, 0x13, 0x3f, 0x7f, 0xc7, 0x97, 0x17, 0xfd, 0xd9, 0xb8, 0x7b, 0x39, 0x20, 0xa3, 0x8b, 0xf7,
	0x53, 0xf7, 0x01, 0x7e, 0x0c, 0x47, 0x36, 0xaa, 0xdf, 0x4d, 0xd7, 0xef, 0x7f, 0x70, 0x11, 0x7e,
	0x09, 0xc7, 0x9a, 0xb4, 0x37, 0x7d, 0x3c, 0x9e, 0xf6, 0x7b, 0x5d, 0xdf, 0x1f, 0x0f, 0xc8, 0x74,
	0x3a, 0x71, 0x6b, 0xf8, 0x18, 0x9e, 0xda, 0xf0, 0xd0, 0xe6, 0x90, 0xc1, 0xfc, 0xe3, 0xd8, 0x77,
	0xeb, 0x79, 0xa6, 0x9d, 0x7b, 0x25, 0xb3, 0x91, 0xf7, 0x62, 0x2d, 0x2c, 0xf7, 0xe2, 0x2c, 0x9b,
	0xe6, 0x0b, 0xfa, 0xee, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x24, 0xfa, 0x08, 0x5c, 0x50, 0x05,
	0x00, 0x00,
}
