// Code generated by protoc-gen-go.
// source: proxy.proto
// DO NOT EDIT!

/*
Package proxymsg is a generated protocol buffer package.

It is generated from these files:
	proxy.proto

It has these top-level messages:
	InternalMessage
	Proxy_GS_MS_Match
	Proxy_GS_MS_MakeTeamOperate
	Proxy_GS_MS_Offline
	Proxy_GS_BS_Query_BattleInfo
	Proxy_GS_MS_Reconnect
	Proxy_GS_LS_SyncBSInfo
	Proxy_MS_BS_AllocBattleRoom
	Proxy_MS_GS_Begin_Battle
	Proxy_MS_GS_Reconnect
	Proxy_MS_GS_Delete
	Proxy_BS_MS_AllocBattleRoom
	Proxy_BS_GS_Query_BattleInfo
	Proxy_BS_GS_FINISH_BATTLE
	Proxy_BS_MS_SyncBSInfo
*/
package proxymsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProxyMessageType int32

const (
	ProxyMessageType_PMT_GS_MS_MATCH             ProxyMessageType = 0
	ProxyMessageType_PMT_MS_BS_ALLOCBATTLEROOM   ProxyMessageType = 1
	ProxyMessageType_PMT_MS_GS_MATCH_RESULT      ProxyMessageType = 2
	ProxyMessageType_PMT_BS_MS_ALLOCBATTLEROOM   ProxyMessageType = 3
	ProxyMessageType_PMT_MS_GS_BEGIN_BATTLE      ProxyMessageType = 4
	ProxyMessageType_PMT_GS_MS_CHOOSE_OPERATE    ProxyMessageType = 5
	ProxyMessageType_PMT_MS_GS_CHOOSE_OPERATE    ProxyMessageType = 6
	ProxyMessageType_PMT_GS_MS_OFFLINE           ProxyMessageType = 7
	ProxyMessageType_PMT_GS_GS_FRIEND_OPERATE    ProxyMessageType = 8
	ProxyMessageType_PMT_GS_BS_QUERY_BATTLEINFO  ProxyMessageType = 9
	ProxyMessageType_PMT_BS_GS_QUERY_BATTLEINFO  ProxyMessageType = 10
	ProxyMessageType_PMT_BS_GS_FINISH_BATTLE     ProxyMessageType = 11
	ProxyMessageType_PMT_GS_MS_RECONNECT         ProxyMessageType = 12
	ProxyMessageType_PMT_MS_GS_RECONNECT         ProxyMessageType = 13
	ProxyMessageType_PMT_BS_MS_SYNCBSINFO        ProxyMessageType = 14
	ProxyMessageType_PMT_GS_MS_MAKE_TEAM_OPERATE ProxyMessageType = 15
	ProxyMessageType_PMT_MS_GS_MAKE_TEAM_OPERATE ProxyMessageType = 16
	ProxyMessageType_PMT_MS_GS_DELETE            ProxyMessageType = 17
	ProxyMessageType_PMT_GS_LS_SYNCGSINFO        ProxyMessageType = 18
)

var ProxyMessageType_name = map[int32]string{
	0:  "PMT_GS_MS_MATCH",
	1:  "PMT_MS_BS_ALLOCBATTLEROOM",
	2:  "PMT_MS_GS_MATCH_RESULT",
	3:  "PMT_BS_MS_ALLOCBATTLEROOM",
	4:  "PMT_MS_GS_BEGIN_BATTLE",
	5:  "PMT_GS_MS_CHOOSE_OPERATE",
	6:  "PMT_MS_GS_CHOOSE_OPERATE",
	7:  "PMT_GS_MS_OFFLINE",
	8:  "PMT_GS_GS_FRIEND_OPERATE",
	9:  "PMT_GS_BS_QUERY_BATTLEINFO",
	10: "PMT_BS_GS_QUERY_BATTLEINFO",
	11: "PMT_BS_GS_FINISH_BATTLE",
	12: "PMT_GS_MS_RECONNECT",
	13: "PMT_MS_GS_RECONNECT",
	14: "PMT_BS_MS_SYNCBSINFO",
	15: "PMT_GS_MS_MAKE_TEAM_OPERATE",
	16: "PMT_MS_GS_MAKE_TEAM_OPERATE",
	17: "PMT_MS_GS_DELETE",
	18: "PMT_GS_LS_SYNCGSINFO",
}
var ProxyMessageType_value = map[string]int32{
	"PMT_GS_MS_MATCH":             0,
	"PMT_MS_BS_ALLOCBATTLEROOM":   1,
	"PMT_MS_GS_MATCH_RESULT":      2,
	"PMT_BS_MS_ALLOCBATTLEROOM":   3,
	"PMT_MS_GS_BEGIN_BATTLE":      4,
	"PMT_GS_MS_CHOOSE_OPERATE":    5,
	"PMT_MS_GS_CHOOSE_OPERATE":    6,
	"PMT_GS_MS_OFFLINE":           7,
	"PMT_GS_GS_FRIEND_OPERATE":    8,
	"PMT_GS_BS_QUERY_BATTLEINFO":  9,
	"PMT_BS_GS_QUERY_BATTLEINFO":  10,
	"PMT_BS_GS_FINISH_BATTLE":     11,
	"PMT_GS_MS_RECONNECT":         12,
	"PMT_MS_GS_RECONNECT":         13,
	"PMT_BS_MS_SYNCBSINFO":        14,
	"PMT_GS_MS_MAKE_TEAM_OPERATE": 15,
	"PMT_MS_GS_MAKE_TEAM_OPERATE": 16,
	"PMT_MS_GS_DELETE":            17,
	"PMT_GS_LS_SYNCGSINFO":        18,
}

func (x ProxyMessageType) String() string {
	return proto.EnumName(ProxyMessageType_name, int32(x))
}
func (ProxyMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// proxy message protocol
type InternalMessage struct {
	Fromid   int32  `protobuf:"varint,1,opt,name=fromid" json:"fromid,omitempty"`
	Fromtype string `protobuf:"bytes,2,opt,name=fromtype" json:"fromtype,omitempty"`
	Toid     int32  `protobuf:"varint,3,opt,name=toid" json:"toid,omitempty"`
	Totype   string `protobuf:"bytes,4,opt,name=totype" json:"totype,omitempty"`
	Charid   uint32 `protobuf:"varint,5,opt,name=charid" json:"charid,omitempty"`
	Msgid    uint32 `protobuf:"varint,6,opt,name=msgid" json:"msgid,omitempty"`
	Msgdata  []byte `protobuf:"bytes,7,opt,name=msgdata,proto3" json:"msgdata,omitempty"`
	Time     int64  `protobuf:"varint,8,opt,name=time" json:"time,omitempty"`
}

func (m *InternalMessage) Reset()                    { *m = InternalMessage{} }
func (m *InternalMessage) String() string            { return proto.CompactTextString(m) }
func (*InternalMessage) ProtoMessage()               {}
func (*InternalMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Proxy_GS_MS_Match struct {
	Charid    uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
	Charname  string `protobuf:"bytes,2,opt,name=charname" json:"charname,omitempty"`
	Matchmode int32  `protobuf:"varint,3,opt,name=matchmode" json:"matchmode,omitempty"`
	Mapid     int32  `protobuf:"varint,4,opt,name=mapid" json:"mapid,omitempty"`
	Action    int32  `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
}

func (m *Proxy_GS_MS_Match) Reset()                    { *m = Proxy_GS_MS_Match{} }
func (m *Proxy_GS_MS_Match) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Match) ProtoMessage()               {}
func (*Proxy_GS_MS_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Proxy_GS_MS_MakeTeamOperate struct {
	Action        int32  `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	Matchmode     int32  `protobuf:"varint,2,opt,name=matchmode" json:"matchmode,omitempty"`
	Mapid         int32  `protobuf:"varint,3,opt,name=mapid" json:"mapid,omitempty"`
	Targetid      uint32 `protobuf:"varint,4,opt,name=targetid" json:"targetid,omitempty"`
	Benchid       int32  `protobuf:"varint,5,opt,name=benchid" json:"benchid,omitempty"`
	Matchserverid int32  `protobuf:"varint,6,opt,name=matchserverid" json:"matchserverid,omitempty"`
	Targetgsid    int32  `protobuf:"varint,7,opt,name=targetgsid" json:"targetgsid,omitempty"`
	ActorCharname string `protobuf:"bytes,8,opt,name=actor_charname" json:"actor_charname,omitempty"`
}

func (m *Proxy_GS_MS_MakeTeamOperate) Reset()                    { *m = Proxy_GS_MS_MakeTeamOperate{} }
func (m *Proxy_GS_MS_MakeTeamOperate) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_MakeTeamOperate) ProtoMessage()               {}
func (*Proxy_GS_MS_MakeTeamOperate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Proxy_GS_MS_Offline struct {
	Charid uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
}

func (m *Proxy_GS_MS_Offline) Reset()                    { *m = Proxy_GS_MS_Offline{} }
func (m *Proxy_GS_MS_Offline) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Offline) ProtoMessage()               {}
func (*Proxy_GS_MS_Offline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Proxy_GS_BS_Query_BattleInfo struct {
	Charid uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
}

func (m *Proxy_GS_BS_Query_BattleInfo) Reset()                    { *m = Proxy_GS_BS_Query_BattleInfo{} }
func (m *Proxy_GS_BS_Query_BattleInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_BS_Query_BattleInfo) ProtoMessage()               {}
func (*Proxy_GS_BS_Query_BattleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Proxy_GS_MS_Reconnect struct {
	Charid uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
}

func (m *Proxy_GS_MS_Reconnect) Reset()                    { *m = Proxy_GS_MS_Reconnect{} }
func (m *Proxy_GS_MS_Reconnect) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Reconnect) ProtoMessage()               {}
func (*Proxy_GS_MS_Reconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Proxy_GS_LS_SyncBSInfo struct {
	GameServerID    int32 `protobuf:"varint,1,opt,name=GameServerID" json:"GameServerID,omitempty"`
	GamePlayerCount int32 `protobuf:"varint,2,opt,name=GamePlayerCount" json:"GamePlayerCount,omitempty"`
	WaitLoginCount  int32 `protobuf:"varint,3,opt,name=WaitLoginCount" json:"WaitLoginCount,omitempty"`
}

func (m *Proxy_GS_LS_SyncBSInfo) Reset()                    { *m = Proxy_GS_LS_SyncBSInfo{} }
func (m *Proxy_GS_LS_SyncBSInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_LS_SyncBSInfo) ProtoMessage()               {}
func (*Proxy_GS_LS_SyncBSInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type Proxy_MS_BS_AllocBattleRoom struct {
	Matchmode    int32                                     `protobuf:"varint,1,opt,name=matchmode" json:"matchmode,omitempty"`
	Mapid        int32                                     `protobuf:"varint,2,opt,name=mapid" json:"mapid,omitempty"`
	Matchtableid int32                                     `protobuf:"varint,3,opt,name=matchtableid" json:"matchtableid,omitempty"`
	Members      []*Proxy_MS_BS_AllocBattleRoom_MemberInfo `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
}

func (m *Proxy_MS_BS_AllocBattleRoom) Reset()                    { *m = Proxy_MS_BS_AllocBattleRoom{} }
func (m *Proxy_MS_BS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_BS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_MS_BS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Proxy_MS_BS_AllocBattleRoom) GetMembers() []*Proxy_MS_BS_AllocBattleRoom_MemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type Proxy_MS_BS_AllocBattleRoom_MemberInfo struct {
	CharID       uint32 `protobuf:"varint,1,opt,name=CharID" json:"CharID,omitempty"`
	CharName     string `protobuf:"bytes,2,opt,name=CharName" json:"CharName,omitempty"`
	CharType     int32  `protobuf:"varint,3,opt,name=CharType" json:"CharType,omitempty"`
	TeamID       int32  `protobuf:"varint,4,opt,name=TeamID" json:"TeamID,omitempty"`
	OwnerID      uint32 `protobuf:"varint,5,opt,name=OwnerID" json:"OwnerID,omitempty"`
	GameServerID int32  `protobuf:"varint,6,opt,name=GameServerID" json:"GameServerID,omitempty"`
}

func (m *Proxy_MS_BS_AllocBattleRoom_MemberInfo) Reset() {
	*m = Proxy_MS_BS_AllocBattleRoom_MemberInfo{}
}
func (m *Proxy_MS_BS_AllocBattleRoom_MemberInfo) String() string { return proto.CompactTextString(m) }
func (*Proxy_MS_BS_AllocBattleRoom_MemberInfo) ProtoMessage()    {}
func (*Proxy_MS_BS_AllocBattleRoom_MemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type Proxy_MS_GS_Begin_Battle struct {
	BattleRoomID int32  `protobuf:"varint,1,opt,name=BattleRoomID" json:"BattleRoomID,omitempty"`
	BattleAddr   string `protobuf:"bytes,2,opt,name=BattleAddr" json:"BattleAddr,omitempty"`
	BattleKey    []byte `protobuf:"bytes,3,opt,name=BattleKey,proto3" json:"BattleKey,omitempty"`
}

func (m *Proxy_MS_GS_Begin_Battle) Reset()                    { *m = Proxy_MS_GS_Begin_Battle{} }
func (m *Proxy_MS_GS_Begin_Battle) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_GS_Begin_Battle) ProtoMessage()               {}
func (*Proxy_MS_GS_Begin_Battle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type Proxy_MS_GS_Reconnect struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *Proxy_MS_GS_Reconnect) Reset()                    { *m = Proxy_MS_GS_Reconnect{} }
func (m *Proxy_MS_GS_Reconnect) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_GS_Reconnect) ProtoMessage()               {}
func (*Proxy_MS_GS_Reconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type Proxy_MS_GS_Delete struct {
	Reason int32 `protobuf:"varint,1,opt,name=reason" json:"reason,omitempty"`
}

func (m *Proxy_MS_GS_Delete) Reset()                    { *m = Proxy_MS_GS_Delete{} }
func (m *Proxy_MS_GS_Delete) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_GS_Delete) ProtoMessage()               {}
func (*Proxy_MS_GS_Delete) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type Proxy_BS_MS_AllocBattleRoom struct {
	Retcode        int32  `protobuf:"varint,1,opt,name=retcode" json:"retcode,omitempty"`
	Matchtableid   int32  `protobuf:"varint,2,opt,name=matchtableid" json:"matchtableid,omitempty"`
	Battleroomid   int32  `protobuf:"varint,3,opt,name=battleroomid" json:"battleroomid,omitempty"`
	Battleroomkey  []byte `protobuf:"bytes,4,opt,name=battleroomkey,proto3" json:"battleroomkey,omitempty"`
	Battleserverid int32  `protobuf:"varint,5,opt,name=battleserverid" json:"battleserverid,omitempty"`
	Connectaddr    string `protobuf:"bytes,6,opt,name=connectaddr" json:"connectaddr,omitempty"`
}

func (m *Proxy_BS_MS_AllocBattleRoom) Reset()                    { *m = Proxy_BS_MS_AllocBattleRoom{} }
func (m *Proxy_BS_MS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_MS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_BS_MS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type Proxy_BS_GS_Query_BattleInfo struct {
	CharID     uint32 `protobuf:"varint,1,opt,name=CharID" json:"CharID,omitempty"`
	InBattle   bool   `protobuf:"varint,2,opt,name=InBattle" json:"InBattle,omitempty"`
	BattleKey  []byte `protobuf:"bytes,3,opt,name=BattleKey,proto3" json:"BattleKey,omitempty"`
	BattleAddr string `protobuf:"bytes,4,opt,name=BattleAddr" json:"BattleAddr,omitempty"`
}

func (m *Proxy_BS_GS_Query_BattleInfo) Reset()                    { *m = Proxy_BS_GS_Query_BattleInfo{} }
func (m *Proxy_BS_GS_Query_BattleInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_GS_Query_BattleInfo) ProtoMessage()               {}
func (*Proxy_BS_GS_Query_BattleInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type Proxy_BS_GS_FINISH_BATTLE struct {
	CharID uint32 `protobuf:"varint,1,opt,name=CharID" json:"CharID,omitempty"`
}

func (m *Proxy_BS_GS_FINISH_BATTLE) Reset()                    { *m = Proxy_BS_GS_FINISH_BATTLE{} }
func (m *Proxy_BS_GS_FINISH_BATTLE) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_GS_FINISH_BATTLE) ProtoMessage()               {}
func (*Proxy_BS_GS_FINISH_BATTLE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type Proxy_BS_MS_SyncBSInfo struct {
	BattleServerID    int32 `protobuf:"varint,1,opt,name=BattleServerID" json:"BattleServerID,omitempty"`
	BattleRoomCount   int32 `protobuf:"varint,2,opt,name=BattleRoomCount" json:"BattleRoomCount,omitempty"`
	BattleMemberCount int32 `protobuf:"varint,3,opt,name=BattleMemberCount" json:"BattleMemberCount,omitempty"`
}

func (m *Proxy_BS_MS_SyncBSInfo) Reset()                    { *m = Proxy_BS_MS_SyncBSInfo{} }
func (m *Proxy_BS_MS_SyncBSInfo) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_MS_SyncBSInfo) ProtoMessage()               {}
func (*Proxy_BS_MS_SyncBSInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func init() {
	proto.RegisterType((*InternalMessage)(nil), "proxymsg.InternalMessage")
	proto.RegisterType((*Proxy_GS_MS_Match)(nil), "proxymsg.Proxy_GS_MS_Match")
	proto.RegisterType((*Proxy_GS_MS_MakeTeamOperate)(nil), "proxymsg.Proxy_GS_MS_MakeTeamOperate")
	proto.RegisterType((*Proxy_GS_MS_Offline)(nil), "proxymsg.Proxy_GS_MS_Offline")
	proto.RegisterType((*Proxy_GS_BS_Query_BattleInfo)(nil), "proxymsg.Proxy_GS_BS_Query_BattleInfo")
	proto.RegisterType((*Proxy_GS_MS_Reconnect)(nil), "proxymsg.Proxy_GS_MS_Reconnect")
	proto.RegisterType((*Proxy_GS_LS_SyncBSInfo)(nil), "proxymsg.Proxy_GS_LS_SyncBSInfo")
	proto.RegisterType((*Proxy_MS_BS_AllocBattleRoom)(nil), "proxymsg.Proxy_MS_BS_AllocBattleRoom")
	proto.RegisterType((*Proxy_MS_BS_AllocBattleRoom_MemberInfo)(nil), "proxymsg.Proxy_MS_BS_AllocBattleRoom.MemberInfo")
	proto.RegisterType((*Proxy_MS_GS_Begin_Battle)(nil), "proxymsg.Proxy_MS_GS_Begin_Battle")
	proto.RegisterType((*Proxy_MS_GS_Reconnect)(nil), "proxymsg.Proxy_MS_GS_Reconnect")
	proto.RegisterType((*Proxy_MS_GS_Delete)(nil), "proxymsg.Proxy_MS_GS_Delete")
	proto.RegisterType((*Proxy_BS_MS_AllocBattleRoom)(nil), "proxymsg.Proxy_BS_MS_AllocBattleRoom")
	proto.RegisterType((*Proxy_BS_GS_Query_BattleInfo)(nil), "proxymsg.Proxy_BS_GS_Query_BattleInfo")
	proto.RegisterType((*Proxy_BS_GS_FINISH_BATTLE)(nil), "proxymsg.Proxy_BS_GS_FINISH_BATTLE")
	proto.RegisterType((*Proxy_BS_MS_SyncBSInfo)(nil), "proxymsg.Proxy_BS_MS_SyncBSInfo")
	proto.RegisterEnum("proxymsg.ProxyMessageType", ProxyMessageType_name, ProxyMessageType_value)
}

var fileDescriptor0 = []byte{
	// 1086 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc6, 0xf9, 0x6b, 0x3a, 0x6d, 0x5a, 0x77, 0x76, 0xb7, 0x1b, 0xba, 0x0b, 0xac, 0x2c, 0x7e,
	0x2a, 0xb4, 0x14, 0xc4, 0x4a, 0xdc, 0x27, 0xa9, 0x9b, 0x9a, 0x4d, 0xe2, 0x32, 0xf6, 0x0a, 0xed,
	0x95, 0xe5, 0x24, 0xd3, 0x34, 0x6a, 0x6c, 0x57, 0x8e, 0x17, 0x88, 0xc4, 0x23, 0x20, 0x84, 0xc4,
	0x0d, 0xaf, 0xc0, 0x2d, 0xef, 0xc1, 0xb3, 0x70, 0xc7, 0xf5, 0x9e, 0xf9, 0xb3, 0xc7, 0xee, 0x66,
	0xa5, 0xaa, 0x9a, 0xf3, 0x9d, 0x73, 0xe6, 0xfc, 0x7d, 0x73, 0x1c, 0xb4, 0x77, 0x97, 0x26, 0xbf,
	0x6c, 0xce, 0xe0, 0x7f, 0x96, 0xe0, 0x36, 0x17, 0xa2, 0xf5, 0xc2, 0xfa, 0xd7, 0x40, 0x87, 0x4e,
	0x9c, 0xd1, 0x34, 0x0e, 0x57, 0x63, 0xba, 0x5e, 0x87, 0x0b, 0x8a, 0x8f, 0x51, 0xeb, 0x3a, 0x4d,
	0xa2, 0xe5, 0xbc, 0x6b, 0x3c, 0x33, 0x4e, 0x9b, 0x44, 0x4a, 0xf8, 0x04, 0xb5, 0xd9, 0x29, 0xdb,
	0xdc, 0xd1, 0x6e, 0x0d, 0x34, 0xbb, 0x24, 0x97, 0x31, 0x46, 0x8d, 0x2c, 0x01, 0x8f, 0x3a, 0xf7,
	0xe0, 0x67, 0x76, 0x4f, 0x96, 0x70, 0xeb, 0x06, 0xb7, 0x96, 0x12, 0xc3, 0x67, 0x37, 0x61, 0x0a,
	0xd6, 0x4d, 0xc0, 0x3b, 0x44, 0x4a, 0xf8, 0x21, 0x6a, 0x42, 0x4a, 0x00, 0xb7, 0x38, 0x2c, 0x04,
	0xdc, 0x45, 0x3b, 0x70, 0x98, 0x87, 0x59, 0xd8, 0xdd, 0x01, 0x7c, 0x9f, 0x28, 0x91, 0xc7, 0x5c,
	0x46, 0xb4, 0xdb, 0x06, 0xb8, 0x4e, 0xf8, 0xd9, 0xfa, 0xd3, 0x40, 0x47, 0x57, 0xac, 0xb8, 0x60,
	0xe8, 0x05, 0x63, 0xf8, 0x0b, 0xb3, 0xd9, 0x8d, 0x16, 0xd1, 0x28, 0x45, 0x84, 0x8a, 0xd8, 0x29,
	0x0e, 0xa3, 0xbc, 0x22, 0x25, 0xe3, 0xa7, 0x68, 0x37, 0x62, 0xce, 0x51, 0x32, 0xa7, 0xb2, 0xac,
	0x02, 0xe0, 0xb9, 0x86, 0x77, 0x70, 0x61, 0x83, 0x6b, 0x84, 0xc0, 0xe2, 0x84, 0xb3, 0x6c, 0x99,
	0xc4, 0xbc, 0x32, 0xe8, 0x9c, 0x90, 0xac, 0xdf, 0x6a, 0xe8, 0x49, 0x39, 0xab, 0x5b, 0xea, 0xd3,
	0x30, 0x72, 0xef, 0x68, 0x1a, 0x66, 0x54, 0xf3, 0x33, 0x74, 0xbf, 0x72, 0x0e, 0xb5, 0xad, 0x39,
	0xd4, 0xf5, 0x1c, 0xa0, 0xa6, 0x2c, 0x4c, 0x17, 0x34, 0x93, 0xc9, 0x75, 0x48, 0x2e, 0xb3, 0x5e,
	0x4e, 0x69, 0x3c, 0xbb, 0x91, 0xad, 0x6f, 0x12, 0x25, 0xe2, 0x4f, 0x51, 0x87, 0x5f, 0xbc, 0xa6,
	0xe9, 0x4f, 0x34, 0x95, 0x33, 0x68, 0x92, 0x32, 0x88, 0x3f, 0x46, 0x48, 0xdc, 0xb5, 0x58, 0x83,
	0xc9, 0x0e, 0x37, 0xd1, 0x10, 0xfc, 0x19, 0x3a, 0x80, 0xcc, 0x93, 0x34, 0xc8, 0xbb, 0xda, 0xe6,
	0x5d, 0xed, 0x70, 0x74, 0x20, 0x41, 0xeb, 0x2b, 0xf4, 0x40, 0xef, 0x86, 0x7b, 0x7d, 0xbd, 0x5a,
	0xc6, 0x74, 0xdb, 0x94, 0xac, 0xef, 0xd0, 0xd3, 0xdc, 0xbc, 0xef, 0x05, 0x3f, 0xbc, 0xa1, 0xe9,
	0x26, 0xe8, 0x87, 0x59, 0xb6, 0xa2, 0x4e, 0x7c, 0x9d, 0x6c, 0xf5, 0xfb, 0x1a, 0x3d, 0xd2, 0xc3,
	0x10, 0x3a, 0x4b, 0xe2, 0x98, 0xce, 0xb2, 0xad, 0x0e, 0xbf, 0x1b, 0xe8, 0x38, 0xf7, 0x18, 0x79,
	0x81, 0xb7, 0x89, 0x67, 0x7d, 0x8f, 0xc7, 0xb0, 0xd0, 0xfe, 0x10, 0x52, 0xf7, 0x78, 0x27, 0x9c,
	0x73, 0x39, 0xa7, 0x12, 0x86, 0x4f, 0xd1, 0x21, 0x93, 0xaf, 0x56, 0xe1, 0x86, 0xa6, 0x83, 0xe4,
	0x4d, 0x9c, 0xc9, 0x99, 0x55, 0x61, 0xfc, 0x39, 0x3a, 0xf8, 0x31, 0x5c, 0x66, 0xa3, 0x64, 0xb1,
	0x8c, 0x85, 0xa1, 0x18, 0x61, 0x05, 0xb5, 0xfe, 0xcf, 0x79, 0x33, 0xe6, 0xa5, 0xf7, 0x56, 0xab,
	0x64, 0x26, 0x2a, 0x27, 0x49, 0x12, 0x95, 0xf9, 0x61, 0x6c, 0xe5, 0x47, 0x4d, 0xe7, 0x07, 0x54,
	0xc2, 0x4d, 0xb2, 0x70, 0xba, 0xa2, 0x39, 0x79, 0x4a, 0x18, 0xfe, 0x1e, 0xde, 0x1c, 0x8d, 0xa6,
	0x34, 0x5d, 0x03, 0x85, 0xea, 0xa7, 0x7b, 0xdf, 0x7e, 0x73, 0xa6, 0x36, 0xc6, 0xd9, 0x7b, 0xf2,
	0x39, 0x1b, 0x73, 0x27, 0xd6, 0x30, 0xa2, 0x2e, 0x38, 0xf9, 0xc7, 0x40, 0xa8, 0xc0, 0x59, 0xef,
	0x19, 0x0f, 0x64, 0x0b, 0xa1, 0xf7, 0x42, 0x62, 0xb4, 0x65, 0xa7, 0x89, 0xf6, 0x14, 0x95, 0xac,
	0x74, 0x3e, 0x5b, 0x25, 0x22, 0xdd, 0x5c, 0x66, 0xf7, 0xb1, 0x97, 0x04, 0xf7, 0x89, 0x97, 0x28,
	0x25, 0x46, 0x75, 0xf7, 0xe7, 0x98, 0xcf, 0x4a, 0x6c, 0x19, 0x25, 0xde, 0x1b, 0x65, 0xeb, 0xfe,
	0x28, 0xad, 0x5f, 0x51, 0x37, 0xaf, 0x93, 0xb1, 0x8e, 0xc2, 0x48, 0x24, 0xe5, 0x98, 0x7f, 0x51,
	0x72, 0x41, 0x05, 0x1d, 0x63, 0x0f, 0x45, 0xc8, 0xbd, 0xf9, 0x3c, 0x95, 0xf5, 0x68, 0x08, 0x1b,
	0x9c, 0x90, 0x5e, 0xd2, 0x0d, 0x2f, 0x69, 0x9f, 0x14, 0x80, 0xf5, 0x85, 0x22, 0xae, 0x88, 0x5e,
	0x10, 0xf7, 0x00, 0xd5, 0x92, 0x5b, 0x1e, 0xb0, 0x4d, 0xe0, 0x64, 0x3d, 0x47, 0x58, 0x37, 0x3c,
	0xa7, 0x2b, 0x2a, 0xb6, 0x49, 0x4a, 0xc3, 0x75, 0xb1, 0x4d, 0x84, 0x64, 0xfd, 0x67, 0x28, 0x36,
	0xf5, 0xf9, 0x83, 0xa8, 0xb2, 0x09, 0x5a, 0x96, 0xd2, 0x6c, 0x56, 0x70, 0x49, 0x89, 0xf7, 0x38,
	0x53, 0x7b, 0x07, 0x67, 0xc0, 0x66, 0xca, 0xef, 0x4a, 0x13, 0xfe, 0xed, 0x90, 0xbc, 0xd2, 0x31,
	0xb6, 0x65, 0x0a, 0xf9, 0x16, 0x4a, 0x6f, 0xf0, 0xd2, 0xcb, 0x20, 0x7b, 0x1d, 0x02, 0xc8, 0x97,
	0x91, 0x58, 0x56, 0x15, 0x14, 0x3f, 0x43, 0x7b, 0xb2, 0x31, 0x21, 0xeb, 0x72, 0x8b, 0x77, 0x59,
	0x87, 0xac, 0x3f, 0x0c, 0xb5, 0x3a, 0xfa, 0xbc, 0x41, 0xef, 0x5a, 0x1d, 0xdb, 0xd8, 0xe8, 0xc4,
	0xc2, 0x8e, 0x17, 0xdb, 0x26, 0xb9, 0xfc, 0xfe, 0xd9, 0x55, 0x26, 0xdf, 0xa8, 0x4e, 0xde, 0x7a,
	0x81, 0x3e, 0xd4, 0x33, 0xba, 0x70, 0x26, 0x8e, 0x77, 0x19, 0xf4, 0x7b, 0xbe, 0x3f, 0xb2, 0xb7,
	0xa5, 0x63, 0xfd, 0x95, 0x2f, 0x26, 0x31, 0x39, 0x6d, 0x31, 0x41, 0xb3, 0xc4, 0xed, 0x95, 0xd5,
	0x54, 0x41, 0xd9, 0x72, 0x2a, 0x46, 0x5d, 0x5a, 0x4e, 0x15, 0x18, 0x3f, 0x47, 0x47, 0x02, 0x12,
	0xaf, 0x56, 0xdf, 0x4f, 0xf7, 0x15, 0x5f, 0xfe, 0xdd, 0x40, 0x26, 0x4f, 0x4d, 0xfe, 0x7a, 0xe0,
	0x8f, 0xf2, 0x01, 0x3a, 0xbc, 0x1a, 0xfb, 0xea, 0x63, 0xd7, 0xf3, 0x07, 0x97, 0xe6, 0x07, 0xf8,
	0x23, 0xa8, 0x1c, 0x40, 0xb9, 0x39, 0x46, 0x23, 0x77, 0x20, 0xaa, 0x26, 0xae, 0x3b, 0x36, 0x0d,
	0x68, 0xf9, 0xb1, 0x54, 0x0f, 0xa5, 0x4f, 0x40, 0x6c, 0xef, 0xd5, 0xc8, 0x37, 0x6b, 0xca, 0x55,
	0xd2, 0xb6, 0xe2, 0x5a, 0x2f, 0xbb, 0xf6, 0xed, 0xa1, 0x33, 0x91, 0x0d, 0x35, 0x1b, 0x30, 0xad,
	0x6e, 0x91, 0xca, 0xe0, 0xd2, 0x75, 0x3d, 0x3b, 0x70, 0xaf, 0x6c, 0xd2, 0xf3, 0x6d, 0xb3, 0xa9,
	0xb4, 0xc2, 0xb3, 0xa2, 0x6d, 0xe1, 0x47, 0xf0, 0x5b, 0x22, 0xf7, 0x75, 0x2f, 0x2e, 0x46, 0xce,
	0xc4, 0x36, 0x77, 0xb4, 0x2b, 0xd9, 0x00, 0x89, 0x63, 0x4f, 0xce, 0x73, 0xa7, 0x36, 0x10, 0xe0,
	0x44, 0x6a, 0xd9, 0xb7, 0xea, 0x95, 0x4d, 0x5e, 0xcb, 0x64, 0x9c, 0xc9, 0x85, 0x6b, 0xee, 0x2a,
	0xbd, 0x24, 0x64, 0x55, 0x8f, 0xf0, 0x13, 0xf4, 0xb8, 0xd0, 0x97, 0xe8, 0x61, 0xee, 0xe1, 0xc7,
	0xf0, 0xe5, 0xcc, 0x33, 0x22, 0xf6, 0xc0, 0x9d, 0x4c, 0xec, 0x81, 0x6f, 0xee, 0x2b, 0x85, 0x5c,
	0x18, 0xb9, 0xa2, 0x03, 0x8f, 0xfa, 0x61, 0xd1, 0x3a, 0xef, 0xf5, 0x64, 0x00, 0xbc, 0x61, 0x81,
	0x0e, 0xf0, 0x27, 0xb0, 0x0d, 0xb4, 0x21, 0xbd, 0xb4, 0x03, 0xdf, 0xee, 0x8d, 0xf3, 0x4a, 0x0e,
	0x95, 0x81, 0x9a, 0x48, 0xd5, 0xc0, 0x84, 0x0f, 0x8c, 0x59, 0x18, 0x9c, 0xdb, 0x23, 0x1b, 0xd0,
	0x23, 0x15, 0x51, 0x7e, 0x42, 0x21, 0xe2, 0x50, 0x44, 0xc4, 0xd3, 0x16, 0xff, 0xf5, 0xf9, 0xe2,
	0x6d, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x1a, 0xd5, 0x61, 0x8c, 0x0a, 0x00, 0x00,
}
