// Code generated by protoc-gen-go.
// source: proxy.proto
// DO NOT EDIT!

/*
Package proxymsg is a generated protocol buffer package.

It is generated from these files:
	proxy.proto

It has these top-level messages:
	InternalMessage
	Proxy_GS_MS_Match
	Proxy_GS_MS_Offline
	Proxy_MS_BS_AllocBattleRoom
	Proxy_MS_GS_Begin_Battle
	Proxy_BS_MS_AllocBattleRoom
*/
package proxymsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ProxyMessageType int32

const (
	ProxyMessageType_PMT_GS_MS_MATCH           ProxyMessageType = 0
	ProxyMessageType_PMT_MS_BS_ALLOCBATTLEROOM ProxyMessageType = 1
	ProxyMessageType_PMT_MS_GS_MATCH_RESULT    ProxyMessageType = 2
	ProxyMessageType_PMT_BS_MS_ALLOCBATTLEROOM ProxyMessageType = 3
	ProxyMessageType_PMT_MS_GS_BEGIN_BATTLE    ProxyMessageType = 4
	ProxyMessageType_PMT_GS_MS_TEAM_OPERATE    ProxyMessageType = 5
	ProxyMessageType_PMT_MS_GS_TEAM_OPERATE    ProxyMessageType = 6
	ProxyMessageType_PMT_GS_MS_OFFLINE         ProxyMessageType = 7
	ProxyMessageType_PMT_GS_GS_FRIEND_OPERATE  ProxyMessageType = 8
)

var ProxyMessageType_name = map[int32]string{
	0: "PMT_GS_MS_MATCH",
	1: "PMT_MS_BS_ALLOCBATTLEROOM",
	2: "PMT_MS_GS_MATCH_RESULT",
	3: "PMT_BS_MS_ALLOCBATTLEROOM",
	4: "PMT_MS_GS_BEGIN_BATTLE",
	5: "PMT_GS_MS_TEAM_OPERATE",
	6: "PMT_MS_GS_TEAM_OPERATE",
	7: "PMT_GS_MS_OFFLINE",
	8: "PMT_GS_GS_FRIEND_OPERATE",
}
var ProxyMessageType_value = map[string]int32{
	"PMT_GS_MS_MATCH":           0,
	"PMT_MS_BS_ALLOCBATTLEROOM": 1,
	"PMT_MS_GS_MATCH_RESULT":    2,
	"PMT_BS_MS_ALLOCBATTLEROOM": 3,
	"PMT_MS_GS_BEGIN_BATTLE":    4,
	"PMT_GS_MS_TEAM_OPERATE":    5,
	"PMT_MS_GS_TEAM_OPERATE":    6,
	"PMT_GS_MS_OFFLINE":         7,
	"PMT_GS_GS_FRIEND_OPERATE":  8,
}

func (x ProxyMessageType) String() string {
	return proto.EnumName(ProxyMessageType_name, int32(x))
}
func (ProxyMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// proxy message protocol
type InternalMessage struct {
	Fromid   int32  `protobuf:"varint,1,opt,name=fromid" json:"fromid,omitempty"`
	Fromtype string `protobuf:"bytes,2,opt,name=fromtype" json:"fromtype,omitempty"`
	Toid     int32  `protobuf:"varint,3,opt,name=toid" json:"toid,omitempty"`
	Totype   string `protobuf:"bytes,4,opt,name=totype" json:"totype,omitempty"`
	Charid   uint32 `protobuf:"varint,5,opt,name=charid" json:"charid,omitempty"`
	Msgid    uint32 `protobuf:"varint,6,opt,name=msgid" json:"msgid,omitempty"`
	Msgdata  []byte `protobuf:"bytes,7,opt,name=msgdata,proto3" json:"msgdata,omitempty"`
}

func (m *InternalMessage) Reset()                    { *m = InternalMessage{} }
func (m *InternalMessage) String() string            { return proto.CompactTextString(m) }
func (*InternalMessage) ProtoMessage()               {}
func (*InternalMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Proxy_GS_MS_Match struct {
	Charid    uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
	Charname  string `protobuf:"bytes,2,opt,name=charname" json:"charname,omitempty"`
	Matchmode int32  `protobuf:"varint,3,opt,name=matchmode" json:"matchmode,omitempty"`
	Mapid     int32  `protobuf:"varint,4,opt,name=mapid" json:"mapid,omitempty"`
	Action    int32  `protobuf:"varint,5,opt,name=action" json:"action,omitempty"`
}

func (m *Proxy_GS_MS_Match) Reset()                    { *m = Proxy_GS_MS_Match{} }
func (m *Proxy_GS_MS_Match) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Match) ProtoMessage()               {}
func (*Proxy_GS_MS_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Proxy_GS_MS_Offline struct {
	Charid uint32 `protobuf:"varint,1,opt,name=charid" json:"charid,omitempty"`
}

func (m *Proxy_GS_MS_Offline) Reset()                    { *m = Proxy_GS_MS_Offline{} }
func (m *Proxy_GS_MS_Offline) String() string            { return proto.CompactTextString(m) }
func (*Proxy_GS_MS_Offline) ProtoMessage()               {}
func (*Proxy_GS_MS_Offline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Proxy_MS_BS_AllocBattleRoom struct {
	Matchmode    int32                                     `protobuf:"varint,1,opt,name=matchmode" json:"matchmode,omitempty"`
	Mapid        int32                                     `protobuf:"varint,2,opt,name=mapid" json:"mapid,omitempty"`
	Matchtableid int32                                     `protobuf:"varint,3,opt,name=matchtableid" json:"matchtableid,omitempty"`
	Members      []*Proxy_MS_BS_AllocBattleRoom_MemberInfo `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
}

func (m *Proxy_MS_BS_AllocBattleRoom) Reset()                    { *m = Proxy_MS_BS_AllocBattleRoom{} }
func (m *Proxy_MS_BS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_BS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_MS_BS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Proxy_MS_BS_AllocBattleRoom) GetMembers() []*Proxy_MS_BS_AllocBattleRoom_MemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

type Proxy_MS_BS_AllocBattleRoom_MemberInfo struct {
	CharID       uint32 `protobuf:"varint,1,opt,name=CharID" json:"CharID,omitempty"`
	CharName     string `protobuf:"bytes,2,opt,name=CharName" json:"CharName,omitempty"`
	CharType     int32  `protobuf:"varint,3,opt,name=CharType" json:"CharType,omitempty"`
	TeamID       int32  `protobuf:"varint,4,opt,name=TeamID" json:"TeamID,omitempty"`
	OwnerID      uint32 `protobuf:"varint,5,opt,name=OwnerID" json:"OwnerID,omitempty"`
	GameServerID int32  `protobuf:"varint,6,opt,name=GameServerID" json:"GameServerID,omitempty"`
}

func (m *Proxy_MS_BS_AllocBattleRoom_MemberInfo) Reset() {
	*m = Proxy_MS_BS_AllocBattleRoom_MemberInfo{}
}
func (m *Proxy_MS_BS_AllocBattleRoom_MemberInfo) String() string { return proto.CompactTextString(m) }
func (*Proxy_MS_BS_AllocBattleRoom_MemberInfo) ProtoMessage()    {}
func (*Proxy_MS_BS_AllocBattleRoom_MemberInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type Proxy_MS_GS_Begin_Battle struct {
	BattleRoomID int32  `protobuf:"varint,1,opt,name=BattleRoomID" json:"BattleRoomID,omitempty"`
	BattleAddr   string `protobuf:"bytes,2,opt,name=BattleAddr" json:"BattleAddr,omitempty"`
	BattleKey    []byte `protobuf:"bytes,3,opt,name=BattleKey,proto3" json:"BattleKey,omitempty"`
}

func (m *Proxy_MS_GS_Begin_Battle) Reset()                    { *m = Proxy_MS_GS_Begin_Battle{} }
func (m *Proxy_MS_GS_Begin_Battle) String() string            { return proto.CompactTextString(m) }
func (*Proxy_MS_GS_Begin_Battle) ProtoMessage()               {}
func (*Proxy_MS_GS_Begin_Battle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Proxy_BS_MS_AllocBattleRoom struct {
	Retcode        int32  `protobuf:"varint,1,opt,name=retcode" json:"retcode,omitempty"`
	Matchtableid   int32  `protobuf:"varint,2,opt,name=matchtableid" json:"matchtableid,omitempty"`
	Battleroomid   int32  `protobuf:"varint,3,opt,name=battleroomid" json:"battleroomid,omitempty"`
	Battleroomkey  []byte `protobuf:"bytes,4,opt,name=battleroomkey,proto3" json:"battleroomkey,omitempty"`
	Battleserverid int32  `protobuf:"varint,5,opt,name=battleserverid" json:"battleserverid,omitempty"`
	Connectaddr    string `protobuf:"bytes,6,opt,name=connectaddr" json:"connectaddr,omitempty"`
}

func (m *Proxy_BS_MS_AllocBattleRoom) Reset()                    { *m = Proxy_BS_MS_AllocBattleRoom{} }
func (m *Proxy_BS_MS_AllocBattleRoom) String() string            { return proto.CompactTextString(m) }
func (*Proxy_BS_MS_AllocBattleRoom) ProtoMessage()               {}
func (*Proxy_BS_MS_AllocBattleRoom) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*InternalMessage)(nil), "proxymsg.InternalMessage")
	proto.RegisterType((*Proxy_GS_MS_Match)(nil), "proxymsg.Proxy_GS_MS_Match")
	proto.RegisterType((*Proxy_GS_MS_Offline)(nil), "proxymsg.Proxy_GS_MS_Offline")
	proto.RegisterType((*Proxy_MS_BS_AllocBattleRoom)(nil), "proxymsg.Proxy_MS_BS_AllocBattleRoom")
	proto.RegisterType((*Proxy_MS_BS_AllocBattleRoom_MemberInfo)(nil), "proxymsg.Proxy_MS_BS_AllocBattleRoom.MemberInfo")
	proto.RegisterType((*Proxy_MS_GS_Begin_Battle)(nil), "proxymsg.Proxy_MS_GS_Begin_Battle")
	proto.RegisterType((*Proxy_BS_MS_AllocBattleRoom)(nil), "proxymsg.Proxy_BS_MS_AllocBattleRoom")
	proto.RegisterEnum("proxymsg.ProxyMessageType", ProxyMessageType_name, ProxyMessageType_value)
}

var fileDescriptor0 = []byte{
	// 662 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x69, 0x92, 0xb6, 0xdb, 0x96, 0x9a, 0x2d, 0x54, 0xa1, 0x5c, 0x54, 0x59, 0x08, 0x55,
	0x48, 0x44, 0x08, 0xbe, 0x20, 0x69, 0xdd, 0x10, 0x48, 0xe2, 0x6a, 0x63, 0x9e, 0xad, 0x8d, 0xb3,
	0x69, 0x23, 0x6c, 0x6f, 0xe5, 0xac, 0x80, 0x4a, 0x7c, 0x01, 0xaf, 0xfc, 0x09, 0x6f, 0x7c, 0x15,
	0x6f, 0x3c, 0x33, 0x7b, 0xf3, 0x25, 0x50, 0xa4, 0x28, 0xda, 0x73, 0x66, 0x67, 0x7c, 0xce, 0xcc,
	0xd8, 0x68, 0xe7, 0x3a, 0xe7, 0x5f, 0x6e, 0xba, 0xf0, 0x2f, 0x38, 0xde, 0x52, 0x20, 0x5d, 0x5d,
	0x7a, 0x3f, 0x1d, 0xb4, 0x3f, 0xcc, 0x04, 0xcb, 0x33, 0x9a, 0x8c, 0xd9, 0x6a, 0x45, 0x2f, 0x19,
	0x3e, 0x44, 0xed, 0x45, 0xce, 0xd3, 0xe5, 0xbc, 0xe3, 0x1c, 0x3b, 0x27, 0x2d, 0x62, 0x10, 0x3e,
	0x42, 0x5b, 0xf2, 0x24, 0x6e, 0xae, 0x59, 0xa7, 0x01, 0x91, 0x6d, 0x52, 0x60, 0x8c, 0x51, 0x53,
	0x70, 0xc8, 0xd8, 0x50, 0x19, 0xea, 0x2c, 0xeb, 0x08, 0xae, 0x6e, 0x37, 0xd5, 0x6d, 0x83, 0x24,
	0x1f, 0x5f, 0xd1, 0x1c, 0x6e, 0xb7, 0x80, 0xdf, 0x23, 0x06, 0xe1, 0xfb, 0xa8, 0x05, 0x92, 0x80,
	0x6e, 0x2b, 0x5a, 0x03, 0xdc, 0x41, 0x9b, 0x70, 0x98, 0x53, 0x41, 0x3b, 0x9b, 0xc0, 0xef, 0x12,
	0x0b, 0xbd, 0xef, 0x0e, 0xba, 0x77, 0x21, 0x8d, 0x44, 0x83, 0x69, 0x34, 0x86, 0x1f, 0x15, 0xf1,
	0x55, 0xa5, 0xba, 0x53, 0xab, 0x0e, 0xea, 0xe5, 0x29, 0xa3, 0x69, 0xa1, 0xde, 0x62, 0xfc, 0x18,
	0x6d, 0xa7, 0x32, 0x39, 0xe5, 0x73, 0x66, 0x2c, 0x94, 0x84, 0xd2, 0x45, 0xaf, 0xa1, 0x60, 0x53,
	0x45, 0x34, 0x90, 0xcf, 0xa1, 0xb1, 0x58, 0xf2, 0x4c, 0xb9, 0x80, 0x2e, 0x69, 0xe4, 0xbd, 0x44,
	0x07, 0x55, 0x51, 0xc1, 0x62, 0x91, 0x2c, 0x33, 0x76, 0x9b, 0x2c, 0xef, 0x77, 0x03, 0x3d, 0xd2,
	0xf7, 0xe1, 0x72, 0x7f, 0x1a, 0xf5, 0x92, 0x84, 0xc7, 0x7d, 0x2a, 0x44, 0xc2, 0x08, 0xe7, 0x69,
	0x5d, 0x9a, 0x73, 0xab, 0xb4, 0x46, 0x55, 0x9a, 0x87, 0x76, 0xd5, 0x15, 0x41, 0x67, 0x09, 0x2b,
	0x86, 0x52, 0xe3, 0xf0, 0x3b, 0x68, 0x2b, 0x4b, 0x67, 0x2c, 0x5f, 0x81, 0xad, 0x8d, 0x93, 0x9d,
	0xd7, 0xaf, 0xba, 0x76, 0x29, 0xba, 0xff, 0xd1, 0xd3, 0x1d, 0xab, 0xa4, 0x61, 0xb6, 0xe0, 0xc4,
	0x16, 0x38, 0xfa, 0xe1, 0x20, 0x54, 0xf2, 0xd2, 0xea, 0x29, 0x98, 0x1b, 0x9e, 0x59, 0xab, 0x1a,
	0xc9, 0x09, 0xc8, 0xd3, 0xa4, 0x32, 0x01, 0x8b, 0x6d, 0x2c, 0x94, 0xdb, 0xa2, 0xe5, 0x16, 0x58,
	0xd6, 0x0b, 0x19, 0x4d, 0xa1, 0x9e, 0x1e, 0x80, 0x41, 0x72, 0x33, 0x82, 0xcf, 0x19, 0x93, 0x0f,
	0xd2, 0x8b, 0x64, 0xa1, 0x6c, 0xc0, 0x00, 0xaa, 0x4e, 0x59, 0xfe, 0x49, 0x85, 0xdb, 0xba, 0x01,
	0x55, 0xce, 0xfb, 0x8a, 0x3a, 0x85, 0x4f, 0x18, 0x55, 0x9f, 0x5d, 0x2e, 0xb3, 0x48, 0x1b, 0x95,
	0xf9, 0xa5, 0x65, 0xe3, 0x03, 0xf2, 0xab, 0x1c, 0x7e, 0x8a, 0x90, 0xc6, 0xbd, 0xf9, 0x3c, 0x37,
	0x7e, 0x2a, 0x8c, 0x1c, 0x9c, 0x46, 0xef, 0xd9, 0x8d, 0xb2, 0xb4, 0x4b, 0x4a, 0xc2, 0xfb, 0xe5,
	0xd8, 0xb1, 0xf7, 0xd5, 0x9a, 0xac, 0x8f, 0x1d, 0xbc, 0xe5, 0x4c, 0xc4, 0xe5, 0xd0, 0x2d, 0xfc,
	0x6b, 0xb8, 0x8d, 0x7f, 0x0c, 0x17, 0xee, 0xcc, 0x54, 0xad, 0x9c, 0xab, 0xf7, 0xd8, 0x2c, 0x40,
	0x95, 0xc3, 0xcf, 0xd0, 0x5e, 0x89, 0x3f, 0x82, 0xc6, 0xa6, 0xd2, 0x58, 0x27, 0xf1, 0x73, 0x74,
	0x57, 0x13, 0x2b, 0xd5, 0x37, 0xf3, 0xce, 0xb6, 0xc8, 0x1a, 0x8b, 0x8f, 0xd1, 0x4e, 0xcc, 0xb3,
	0x8c, 0xc5, 0x82, 0xca, 0x76, 0xb4, 0x55, 0x3b, 0xaa, 0xd4, 0x8b, 0x6f, 0x0d, 0xe4, 0x2a, 0xc7,
	0xe6, 0x33, 0xa3, 0x46, 0x7b, 0x80, 0xf6, 0x2f, 0xc6, 0xa1, 0x7d, 0x7f, 0x7b, 0xe1, 0xe9, 0x5b,
	0xf7, 0x0e, 0x7e, 0x82, 0x1e, 0x4a, 0xd2, 0xec, 0xdf, 0x68, 0x14, 0x9c, 0xf6, 0x7b, 0x61, 0x38,
	0xf2, 0x49, 0x10, 0x8c, 0x5d, 0x07, 0x56, 0xe5, 0xd0, 0x84, 0x07, 0x26, 0x27, 0x22, 0xfe, 0xf4,
	0xc3, 0x28, 0x74, 0x1b, 0x36, 0xd5, 0xf4, 0x74, 0x2d, 0x75, 0xa3, 0x9e, 0xda, 0xf7, 0x07, 0xc3,
	0x49, 0xa4, 0xe3, 0x6e, 0xd3, 0xc6, 0xb4, 0x94, 0xd0, 0xef, 0x8d, 0xa3, 0xe0, 0xc2, 0x27, 0xbd,
	0xd0, 0x77, 0x5b, 0xf5, 0xbc, 0x5a, 0xac, 0x8d, 0x1f, 0xc0, 0x47, 0xa8, 0xc8, 0x0b, 0xce, 0xcf,
	0x47, 0xc3, 0x89, 0xef, 0x6e, 0xc2, 0xf8, 0x3b, 0x86, 0x86, 0xdf, 0x39, 0x19, 0xfa, 0x93, 0xb3,
	0x22, 0x69, 0x6b, 0xd6, 0x56, 0xdf, 0xe1, 0x37, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x5d,
	0x44, 0xc3, 0x96, 0x05, 0x00, 0x00,
}
