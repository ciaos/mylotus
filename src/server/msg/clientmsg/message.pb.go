// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package clientmsg is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Ping
	Pong
	Req_ServerTime
	Rlt_ServerTime
	Req_Register
	Rlt_Register
	Req_ServerList
	Rlt_ServerList
	Req_Login
	Rlt_Login
	Req_Match
	Rlt_Match
	Rlt_NotifyBattleAddress
	Req_ConnectBS
	Rlt_ConnectBS
	Rlt_StartBattle
	Transfer_Command
	Req_EndBattle
	Rlt_EndBattle
*/
package clientmsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_MT_PING                    MessageType = 0
	MessageType_MT_PONG                    MessageType = 1
	MessageType_MT_REQ_SERVERTIME          MessageType = 2
	MessageType_MT_RLT_SERVERTIME          MessageType = 3
	MessageType_MT_REQ_REGISTER            MessageType = 4
	MessageType_MT_RLT_REGISTER            MessageType = 5
	MessageType_MT_REQ_SERVERLIST          MessageType = 6
	MessageType_MT_RLT_SERVERLIST          MessageType = 7
	MessageType_MT_REQ_LOGIN               MessageType = 8
	MessageType_MT_RLT_LOGIN               MessageType = 9
	MessageType_MT_REQ_MATCH               MessageType = 10
	MessageType_MT_RLT_MATCH               MessageType = 11
	MessageType_MT_RLT_NOTIFYBATTLEADDRESS MessageType = 12
	MessageType_MT_REQ_CONNECTBS           MessageType = 13
	MessageType_MT_RLT_CONNECTBS           MessageType = 14
	MessageType_MT_RLT_STARTBATTLE         MessageType = 15
	MessageType_MT_REQ_ENDBATTLE           MessageType = 16
	MessageType_MT_RLT_ENDBATTLE           MessageType = 17
	MessageType_MT_TRANSFER_COMMAND        MessageType = 18
)

var MessageType_name = map[int32]string{
	0:  "MT_PING",
	1:  "MT_PONG",
	2:  "MT_REQ_SERVERTIME",
	3:  "MT_RLT_SERVERTIME",
	4:  "MT_REQ_REGISTER",
	5:  "MT_RLT_REGISTER",
	6:  "MT_REQ_SERVERLIST",
	7:  "MT_RLT_SERVERLIST",
	8:  "MT_REQ_LOGIN",
	9:  "MT_RLT_LOGIN",
	10: "MT_REQ_MATCH",
	11: "MT_RLT_MATCH",
	12: "MT_RLT_NOTIFYBATTLEADDRESS",
	13: "MT_REQ_CONNECTBS",
	14: "MT_RLT_CONNECTBS",
	15: "MT_RLT_STARTBATTLE",
	16: "MT_REQ_ENDBATTLE",
	17: "MT_RLT_ENDBATTLE",
	18: "MT_TRANSFER_COMMAND",
}
var MessageType_value = map[string]int32{
	"MT_PING":                    0,
	"MT_PONG":                    1,
	"MT_REQ_SERVERTIME":          2,
	"MT_RLT_SERVERTIME":          3,
	"MT_REQ_REGISTER":            4,
	"MT_RLT_REGISTER":            5,
	"MT_REQ_SERVERLIST":          6,
	"MT_RLT_SERVERLIST":          7,
	"MT_REQ_LOGIN":               8,
	"MT_RLT_LOGIN":               9,
	"MT_REQ_MATCH":               10,
	"MT_RLT_MATCH":               11,
	"MT_RLT_NOTIFYBATTLEADDRESS": 12,
	"MT_REQ_CONNECTBS":           13,
	"MT_RLT_CONNECTBS":           14,
	"MT_RLT_STARTBATTLE":         15,
	"MT_REQ_ENDBATTLE":           16,
	"MT_RLT_ENDBATTLE":           17,
	"MT_TRANSFER_COMMAND":        18,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Type_LoginRetCode int32

const (
	Type_LoginRetCode_LRC_NONE              Type_LoginRetCode = 0
	Type_LoginRetCode_LRC_ACCOUNT_EXIST     Type_LoginRetCode = 1
	Type_LoginRetCode_LRC_ACCOUNT_NOT_EXIST Type_LoginRetCode = 2
	Type_LoginRetCode_LRC_PASSWORD_ERROR    Type_LoginRetCode = 3
	Type_LoginRetCode_LRC_OTHER             Type_LoginRetCode = 100
)

var Type_LoginRetCode_name = map[int32]string{
	0:   "LRC_NONE",
	1:   "LRC_ACCOUNT_EXIST",
	2:   "LRC_ACCOUNT_NOT_EXIST",
	3:   "LRC_PASSWORD_ERROR",
	100: "LRC_OTHER",
}
var Type_LoginRetCode_value = map[string]int32{
	"LRC_NONE":              0,
	"LRC_ACCOUNT_EXIST":     1,
	"LRC_ACCOUNT_NOT_EXIST": 2,
	"LRC_PASSWORD_ERROR":    3,
	"LRC_OTHER":             100,
}

func (x Type_LoginRetCode) Enum() *Type_LoginRetCode {
	p := new(Type_LoginRetCode)
	*p = x
	return p
}
func (x Type_LoginRetCode) String() string {
	return proto.EnumName(Type_LoginRetCode_name, int32(x))
}
func (x *Type_LoginRetCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_LoginRetCode_value, data, "Type_LoginRetCode")
	if err != nil {
		return err
	}
	*x = Type_LoginRetCode(value)
	return nil
}
func (Type_LoginRetCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Type_GameRetCode int32

const (
	Type_GameRetCode_GRC_NONE           Type_GameRetCode = 0
	Type_GameRetCode_GRC_MATCH_CONTINUE Type_GameRetCode = 10
	Type_GameRetCode_GRC_MATCH_ERROR    Type_GameRetCode = 11
	Type_GameRetCode_GRC_OTHER          Type_GameRetCode = 100
)

var Type_GameRetCode_name = map[int32]string{
	0:   "GRC_NONE",
	10:  "GRC_MATCH_CONTINUE",
	11:  "GRC_MATCH_ERROR",
	100: "GRC_OTHER",
}
var Type_GameRetCode_value = map[string]int32{
	"GRC_NONE":           0,
	"GRC_MATCH_CONTINUE": 10,
	"GRC_MATCH_ERROR":    11,
	"GRC_OTHER":          100,
}

func (x Type_GameRetCode) Enum() *Type_GameRetCode {
	p := new(Type_GameRetCode)
	*p = x
	return p
}
func (x Type_GameRetCode) String() string {
	return proto.EnumName(Type_GameRetCode_name, int32(x))
}
func (x *Type_GameRetCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_GameRetCode_value, data, "Type_GameRetCode")
	if err != nil {
		return err
	}
	*x = Type_GameRetCode(value)
	return nil
}
func (Type_GameRetCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type MatchActionType int32

const (
	MatchActionType_MAT_JOIN   MatchActionType = 0
	MatchActionType_MAT_CANCEL MatchActionType = 1
)

var MatchActionType_name = map[int32]string{
	0: "MAT_JOIN",
	1: "MAT_CANCEL",
}
var MatchActionType_value = map[string]int32{
	"MAT_JOIN":   0,
	"MAT_CANCEL": 1,
}

func (x MatchActionType) Enum() *MatchActionType {
	p := new(MatchActionType)
	*p = x
	return p
}
func (x MatchActionType) String() string {
	return proto.EnumName(MatchActionType_name, int32(x))
}
func (x *MatchActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MatchActionType_value, data, "MatchActionType")
	if err != nil {
		return err
	}
	*x = MatchActionType(value)
	return nil
}
func (MatchActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type MatchModeType int32

const (
	MatchModeType_MMT_NORMAL MatchModeType = 0
	MatchModeType_MMT_RANK   MatchModeType = 1
)

var MatchModeType_name = map[int32]string{
	0: "MMT_NORMAL",
	1: "MMT_RANK",
}
var MatchModeType_value = map[string]int32{
	"MMT_NORMAL": 0,
	"MMT_RANK":   1,
}

func (x MatchModeType) Enum() *MatchModeType {
	p := new(MatchModeType)
	*p = x
	return p
}
func (x MatchModeType) String() string {
	return proto.EnumName(MatchModeType_name, int32(x))
}
func (x *MatchModeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MatchModeType_value, data, "MatchModeType")
	if err != nil {
		return err
	}
	*x = MatchModeType(value)
	return nil
}
func (MatchModeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type Type_BattleRetCode int32

const (
	Type_BattleRetCode_BRC_NONE               Type_BattleRetCode = 0
	Type_BattleRetCode_BRC_BATTLEKEY_ERROR    Type_BattleRetCode = 1
	Type_BattleRetCode_BRC_ROOM_NOT_EXIST     Type_BattleRetCode = 2
	Type_BattleRetCode_BRC_CHARID_NOT_IN_ROOM Type_BattleRetCode = 3
	Type_BattleRetCode_BRC_OTHER              Type_BattleRetCode = 100
)

var Type_BattleRetCode_name = map[int32]string{
	0:   "BRC_NONE",
	1:   "BRC_BATTLEKEY_ERROR",
	2:   "BRC_ROOM_NOT_EXIST",
	3:   "BRC_CHARID_NOT_IN_ROOM",
	100: "BRC_OTHER",
}
var Type_BattleRetCode_value = map[string]int32{
	"BRC_NONE":               0,
	"BRC_BATTLEKEY_ERROR":    1,
	"BRC_ROOM_NOT_EXIST":     2,
	"BRC_CHARID_NOT_IN_ROOM": 3,
	"BRC_OTHER":              100,
}

func (x Type_BattleRetCode) Enum() *Type_BattleRetCode {
	p := new(Type_BattleRetCode)
	*p = x
	return p
}
func (x Type_BattleRetCode) String() string {
	return proto.EnumName(Type_BattleRetCode_name, int32(x))
}
func (x *Type_BattleRetCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_BattleRetCode_value, data, "Type_BattleRetCode")
	if err != nil {
		return err
	}
	*x = Type_BattleRetCode(value)
	return nil
}
func (Type_BattleRetCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Type_BattleEndTypeID int32

const (
	Type_BattleEndTypeID_BEC_FINISH Type_BattleEndTypeID = 0
	Type_BattleEndTypeID_BEC_ABORT  Type_BattleEndTypeID = 1
)

var Type_BattleEndTypeID_name = map[int32]string{
	0: "BEC_FINISH",
	1: "BEC_ABORT",
}
var Type_BattleEndTypeID_value = map[string]int32{
	"BEC_FINISH": 0,
	"BEC_ABORT":  1,
}

func (x Type_BattleEndTypeID) Enum() *Type_BattleEndTypeID {
	p := new(Type_BattleEndTypeID)
	*p = x
	return p
}
func (x Type_BattleEndTypeID) String() string {
	return proto.EnumName(Type_BattleEndTypeID_name, int32(x))
}
func (x *Type_BattleEndTypeID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_BattleEndTypeID_value, data, "Type_BattleEndTypeID")
	if err != nil {
		return err
	}
	*x = Type_BattleEndTypeID(value)
	return nil
}
func (Type_BattleEndTypeID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// /////////////////////////////////////////////
// for test
// /////////////////////////////////////////////
type Ping struct {
	ID               *uint32 `protobuf:"varint,1,req,name=ID" json:"ID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ping) GetID() uint32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

type Pong struct {
	ID               *uint32 `protobuf:"varint,2,req,name=ID" json:"ID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Pong) Reset()                    { *m = Pong{} }
func (m *Pong) String() string            { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()               {}
func (*Pong) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pong) GetID() uint32 {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return 0
}

type Req_ServerTime struct {
	Time             *uint32 `protobuf:"varint,1,req,name=Time" json:"Time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_ServerTime) Reset()                    { *m = Req_ServerTime{} }
func (m *Req_ServerTime) String() string            { return proto.CompactTextString(m) }
func (*Req_ServerTime) ProtoMessage()               {}
func (*Req_ServerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Req_ServerTime) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type Rlt_ServerTime struct {
	Time             *uint32 `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Rlt_ServerTime) Reset()                    { *m = Rlt_ServerTime{} }
func (m *Rlt_ServerTime) String() string            { return proto.CompactTextString(m) }
func (*Rlt_ServerTime) ProtoMessage()               {}
func (*Rlt_ServerTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Rlt_ServerTime) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

// register and login
type Req_Register struct {
	UserName         *string `protobuf:"bytes,1,req,name=UserName" json:"UserName,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=Password" json:"Password,omitempty"`
	ClientVersion    *int32  `protobuf:"varint,3,req,name=ClientVersion" json:"ClientVersion,omitempty"`
	IsLogin          *bool   `protobuf:"varint,4,req,name=IsLogin,def=0" json:"IsLogin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_Register) Reset()                    { *m = Req_Register{} }
func (m *Req_Register) String() string            { return proto.CompactTextString(m) }
func (*Req_Register) ProtoMessage()               {}
func (*Req_Register) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

const Default_Req_Register_IsLogin bool = false

func (m *Req_Register) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *Req_Register) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *Req_Register) GetClientVersion() int32 {
	if m != nil && m.ClientVersion != nil {
		return *m.ClientVersion
	}
	return 0
}

func (m *Req_Register) GetIsLogin() bool {
	if m != nil && m.IsLogin != nil {
		return *m.IsLogin
	}
	return Default_Req_Register_IsLogin
}

type Rlt_Register struct {
	RetCode          *Type_LoginRetCode `protobuf:"varint,1,req,name=RetCode,enum=clientmsg.Type_LoginRetCode" json:"RetCode,omitempty"`
	UserID           *string            `protobuf:"bytes,2,opt,name=UserID" json:"UserID,omitempty"`
	SessionKey       []byte             `protobuf:"bytes,3,opt,name=SessionKey" json:"SessionKey,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *Rlt_Register) Reset()                    { *m = Rlt_Register{} }
func (m *Rlt_Register) String() string            { return proto.CompactTextString(m) }
func (*Rlt_Register) ProtoMessage()               {}
func (*Rlt_Register) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Rlt_Register) GetRetCode() Type_LoginRetCode {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return Type_LoginRetCode_LRC_NONE
}

func (m *Rlt_Register) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *Rlt_Register) GetSessionKey() []byte {
	if m != nil {
		return m.SessionKey
	}
	return nil
}

// req server list
type Req_ServerList struct {
	Channel          *int32 `protobuf:"varint,1,req,name=Channel,def=0" json:"Channel,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Req_ServerList) Reset()                    { *m = Req_ServerList{} }
func (m *Req_ServerList) String() string            { return proto.CompactTextString(m) }
func (*Req_ServerList) ProtoMessage()               {}
func (*Req_ServerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

const Default_Req_ServerList_Channel int32 = 0

func (m *Req_ServerList) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return Default_Req_ServerList_Channel
}

type Rlt_ServerList struct {
	ServerCount      *int32                       `protobuf:"varint,1,req,name=ServerCount" json:"ServerCount,omitempty"`
	ServerList       []*Rlt_ServerList_ServerInfo `protobuf:"bytes,2,rep,name=ServerList" json:"ServerList,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Rlt_ServerList) Reset()                    { *m = Rlt_ServerList{} }
func (m *Rlt_ServerList) String() string            { return proto.CompactTextString(m) }
func (*Rlt_ServerList) ProtoMessage()               {}
func (*Rlt_ServerList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Rlt_ServerList) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *Rlt_ServerList) GetServerList() []*Rlt_ServerList_ServerInfo {
	if m != nil {
		return m.ServerList
	}
	return nil
}

type Rlt_ServerList_ServerInfo struct {
	ServerID         *int32  `protobuf:"varint,1,req,name=ServerID" json:"ServerID,omitempty"`
	ServerName       *string `protobuf:"bytes,2,req,name=ServerName" json:"ServerName,omitempty"`
	Status           *int32  `protobuf:"varint,3,req,name=Status" json:"Status,omitempty"`
	ConnectAddr      *string `protobuf:"bytes,4,req,name=ConnectAddr" json:"ConnectAddr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Rlt_ServerList_ServerInfo) Reset()                    { *m = Rlt_ServerList_ServerInfo{} }
func (m *Rlt_ServerList_ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*Rlt_ServerList_ServerInfo) ProtoMessage()               {}
func (*Rlt_ServerList_ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *Rlt_ServerList_ServerInfo) GetServerID() int32 {
	if m != nil && m.ServerID != nil {
		return *m.ServerID
	}
	return 0
}

func (m *Rlt_ServerList_ServerInfo) GetServerName() string {
	if m != nil && m.ServerName != nil {
		return *m.ServerName
	}
	return ""
}

func (m *Rlt_ServerList_ServerInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *Rlt_ServerList_ServerInfo) GetConnectAddr() string {
	if m != nil && m.ConnectAddr != nil {
		return *m.ConnectAddr
	}
	return ""
}

type Req_Login struct {
	UserID           *string `protobuf:"bytes,1,req,name=UserID" json:"UserID,omitempty"`
	SessionKey       []byte  `protobuf:"bytes,2,req,name=SessionKey" json:"SessionKey,omitempty"`
	ServerID         *int32  `protobuf:"varint,3,req,name=ServerID" json:"ServerID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_Login) Reset()                    { *m = Req_Login{} }
func (m *Req_Login) String() string            { return proto.CompactTextString(m) }
func (*Req_Login) ProtoMessage()               {}
func (*Req_Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Req_Login) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *Req_Login) GetSessionKey() []byte {
	if m != nil {
		return m.SessionKey
	}
	return nil
}

func (m *Req_Login) GetServerID() int32 {
	if m != nil && m.ServerID != nil {
		return *m.ServerID
	}
	return 0
}

type Rlt_Login struct {
	RetCode          *Type_GameRetCode `protobuf:"varint,1,req,name=RetCode,enum=clientmsg.Type_GameRetCode" json:"RetCode,omitempty"`
	CharID           *string           `protobuf:"bytes,2,opt,name=CharID" json:"CharID,omitempty"`
	IsNewCharacter   *bool             `protobuf:"varint,3,opt,name=IsNewCharacter" json:"IsNewCharacter,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Rlt_Login) Reset()                    { *m = Rlt_Login{} }
func (m *Rlt_Login) String() string            { return proto.CompactTextString(m) }
func (*Rlt_Login) ProtoMessage()               {}
func (*Rlt_Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Rlt_Login) GetRetCode() Type_GameRetCode {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return Type_GameRetCode_GRC_NONE
}

func (m *Rlt_Login) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

func (m *Rlt_Login) GetIsNewCharacter() bool {
	if m != nil && m.IsNewCharacter != nil {
		return *m.IsNewCharacter
	}
	return false
}

type Req_Match struct {
	Action           *MatchActionType `protobuf:"varint,1,req,name=Action,enum=clientmsg.MatchActionType" json:"Action,omitempty"`
	Mode             *MatchModeType   `protobuf:"varint,2,req,name=Mode,enum=clientmsg.MatchModeType" json:"Mode,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Req_Match) Reset()                    { *m = Req_Match{} }
func (m *Req_Match) String() string            { return proto.CompactTextString(m) }
func (*Req_Match) ProtoMessage()               {}
func (*Req_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Req_Match) GetAction() MatchActionType {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return MatchActionType_MAT_JOIN
}

func (m *Req_Match) GetMode() MatchModeType {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return MatchModeType_MMT_NORMAL
}

type Rlt_Match struct {
	RetCode          *Type_GameRetCode `protobuf:"varint,1,req,name=RetCode,enum=clientmsg.Type_GameRetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Rlt_Match) Reset()                    { *m = Rlt_Match{} }
func (m *Rlt_Match) String() string            { return proto.CompactTextString(m) }
func (*Rlt_Match) ProtoMessage()               {}
func (*Rlt_Match) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Rlt_Match) GetRetCode() Type_GameRetCode {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return Type_GameRetCode_GRC_NONE
}

type Rlt_NotifyBattleAddress struct {
	RoomID           *int32  `protobuf:"varint,1,req,name=RoomID" json:"RoomID,omitempty"`
	BattleAddr       *string `protobuf:"bytes,2,req,name=BattleAddr" json:"BattleAddr,omitempty"`
	BattleKey        []byte  `protobuf:"bytes,3,req,name=BattleKey" json:"BattleKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Rlt_NotifyBattleAddress) Reset()                    { *m = Rlt_NotifyBattleAddress{} }
func (m *Rlt_NotifyBattleAddress) String() string            { return proto.CompactTextString(m) }
func (*Rlt_NotifyBattleAddress) ProtoMessage()               {}
func (*Rlt_NotifyBattleAddress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Rlt_NotifyBattleAddress) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *Rlt_NotifyBattleAddress) GetBattleAddr() string {
	if m != nil && m.BattleAddr != nil {
		return *m.BattleAddr
	}
	return ""
}

func (m *Rlt_NotifyBattleAddress) GetBattleKey() []byte {
	if m != nil {
		return m.BattleKey
	}
	return nil
}

type Req_ConnectBS struct {
	RoomID           *int32  `protobuf:"varint,1,req,name=RoomID" json:"RoomID,omitempty"`
	BattleKey        []byte  `protobuf:"bytes,2,req,name=BattleKey" json:"BattleKey,omitempty"`
	CharID           *string `protobuf:"bytes,3,req,name=CharID" json:"CharID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Req_ConnectBS) Reset()                    { *m = Req_ConnectBS{} }
func (m *Req_ConnectBS) String() string            { return proto.CompactTextString(m) }
func (*Req_ConnectBS) ProtoMessage()               {}
func (*Req_ConnectBS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Req_ConnectBS) GetRoomID() int32 {
	if m != nil && m.RoomID != nil {
		return *m.RoomID
	}
	return 0
}

func (m *Req_ConnectBS) GetBattleKey() []byte {
	if m != nil {
		return m.BattleKey
	}
	return nil
}

func (m *Req_ConnectBS) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

type Rlt_ConnectBS struct {
	RetCode          *Type_BattleRetCode `protobuf:"varint,1,req,name=RetCode,enum=clientmsg.Type_BattleRetCode" json:"RetCode,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Rlt_ConnectBS) Reset()                    { *m = Rlt_ConnectBS{} }
func (m *Rlt_ConnectBS) String() string            { return proto.CompactTextString(m) }
func (*Rlt_ConnectBS) ProtoMessage()               {}
func (*Rlt_ConnectBS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Rlt_ConnectBS) GetRetCode() Type_BattleRetCode {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return Type_BattleRetCode_BRC_NONE
}

type Rlt_StartBattle struct {
	RandSeed         *int32                        `protobuf:"varint,1,req,name=RandSeed" json:"RandSeed,omitempty"`
	Member           []*Rlt_StartBattle_MemberInfo `protobuf:"bytes,2,rep,name=Member" json:"Member,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *Rlt_StartBattle) Reset()                    { *m = Rlt_StartBattle{} }
func (m *Rlt_StartBattle) String() string            { return proto.CompactTextString(m) }
func (*Rlt_StartBattle) ProtoMessage()               {}
func (*Rlt_StartBattle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Rlt_StartBattle) GetRandSeed() int32 {
	if m != nil && m.RandSeed != nil {
		return *m.RandSeed
	}
	return 0
}

func (m *Rlt_StartBattle) GetMember() []*Rlt_StartBattle_MemberInfo {
	if m != nil {
		return m.Member
	}
	return nil
}

type Rlt_StartBattle_MemberInfo struct {
	CharID           *string `protobuf:"bytes,1,req,name=CharID" json:"CharID,omitempty"`
	CharName         *string `protobuf:"bytes,2,req,name=CharName" json:"CharName,omitempty"`
	CharType         *int32  `protobuf:"varint,3,req,name=CharType" json:"CharType,omitempty"`
	TeamType         *int32  `protobuf:"varint,4,req,name=TeamType" json:"TeamType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Rlt_StartBattle_MemberInfo) Reset()                    { *m = Rlt_StartBattle_MemberInfo{} }
func (m *Rlt_StartBattle_MemberInfo) String() string            { return proto.CompactTextString(m) }
func (*Rlt_StartBattle_MemberInfo) ProtoMessage()               {}
func (*Rlt_StartBattle_MemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15, 0} }

func (m *Rlt_StartBattle_MemberInfo) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

func (m *Rlt_StartBattle_MemberInfo) GetCharName() string {
	if m != nil && m.CharName != nil {
		return *m.CharName
	}
	return ""
}

func (m *Rlt_StartBattle_MemberInfo) GetCharType() int32 {
	if m != nil && m.CharType != nil {
		return *m.CharType
	}
	return 0
}

func (m *Rlt_StartBattle_MemberInfo) GetTeamType() int32 {
	if m != nil && m.TeamType != nil {
		return *m.TeamType
	}
	return 0
}

type Transfer_Command struct {
	CharID           *string                     `protobuf:"bytes,1,req,name=CharID" json:"CharID,omitempty"`
	Messages         []*Transfer_Command_Message `protobuf:"bytes,2,rep,name=Messages" json:"Messages,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *Transfer_Command) Reset()                    { *m = Transfer_Command{} }
func (m *Transfer_Command) String() string            { return proto.CompactTextString(m) }
func (*Transfer_Command) ProtoMessage()               {}
func (*Transfer_Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Transfer_Command) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

func (m *Transfer_Command) GetMessages() []*Transfer_Command_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type Transfer_Command_Message struct {
	Msgid            *uint32 `protobuf:"varint,6,opt,name=msgid" json:"msgid,omitempty"`
	Msgdata          []byte  `protobuf:"bytes,7,opt,name=msgdata" json:"msgdata,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Transfer_Command_Message) Reset()                    { *m = Transfer_Command_Message{} }
func (m *Transfer_Command_Message) String() string            { return proto.CompactTextString(m) }
func (*Transfer_Command_Message) ProtoMessage()               {}
func (*Transfer_Command_Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

func (m *Transfer_Command_Message) GetMsgid() uint32 {
	if m != nil && m.Msgid != nil {
		return *m.Msgid
	}
	return 0
}

func (m *Transfer_Command_Message) GetMsgdata() []byte {
	if m != nil {
		return m.Msgdata
	}
	return nil
}

type Req_EndBattle struct {
	TypeID           *Type_BattleEndTypeID `protobuf:"varint,1,req,name=TypeID,enum=clientmsg.Type_BattleEndTypeID" json:"TypeID,omitempty"`
	CharID           *string               `protobuf:"bytes,2,req,name=CharID" json:"CharID,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Req_EndBattle) Reset()                    { *m = Req_EndBattle{} }
func (m *Req_EndBattle) String() string            { return proto.CompactTextString(m) }
func (*Req_EndBattle) ProtoMessage()               {}
func (*Req_EndBattle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *Req_EndBattle) GetTypeID() Type_BattleEndTypeID {
	if m != nil && m.TypeID != nil {
		return *m.TypeID
	}
	return Type_BattleEndTypeID_BEC_FINISH
}

func (m *Req_EndBattle) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

type Rlt_EndBattle struct {
	RetCode          *Type_BattleRetCode `protobuf:"varint,1,req,name=RetCode,enum=clientmsg.Type_BattleRetCode" json:"RetCode,omitempty"`
	CharID           *string             `protobuf:"bytes,2,req,name=CharID" json:"CharID,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *Rlt_EndBattle) Reset()                    { *m = Rlt_EndBattle{} }
func (m *Rlt_EndBattle) String() string            { return proto.CompactTextString(m) }
func (*Rlt_EndBattle) ProtoMessage()               {}
func (*Rlt_EndBattle) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Rlt_EndBattle) GetRetCode() Type_BattleRetCode {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return Type_BattleRetCode_BRC_NONE
}

func (m *Rlt_EndBattle) GetCharID() string {
	if m != nil && m.CharID != nil {
		return *m.CharID
	}
	return ""
}

func init() {
	proto.RegisterType((*Ping)(nil), "clientmsg.Ping")
	proto.RegisterType((*Pong)(nil), "clientmsg.Pong")
	proto.RegisterType((*Req_ServerTime)(nil), "clientmsg.Req_ServerTime")
	proto.RegisterType((*Rlt_ServerTime)(nil), "clientmsg.Rlt_ServerTime")
	proto.RegisterType((*Req_Register)(nil), "clientmsg.Req_Register")
	proto.RegisterType((*Rlt_Register)(nil), "clientmsg.Rlt_Register")
	proto.RegisterType((*Req_ServerList)(nil), "clientmsg.Req_ServerList")
	proto.RegisterType((*Rlt_ServerList)(nil), "clientmsg.Rlt_ServerList")
	proto.RegisterType((*Rlt_ServerList_ServerInfo)(nil), "clientmsg.Rlt_ServerList.ServerInfo")
	proto.RegisterType((*Req_Login)(nil), "clientmsg.Req_Login")
	proto.RegisterType((*Rlt_Login)(nil), "clientmsg.Rlt_Login")
	proto.RegisterType((*Req_Match)(nil), "clientmsg.Req_Match")
	proto.RegisterType((*Rlt_Match)(nil), "clientmsg.Rlt_Match")
	proto.RegisterType((*Rlt_NotifyBattleAddress)(nil), "clientmsg.Rlt_NotifyBattleAddress")
	proto.RegisterType((*Req_ConnectBS)(nil), "clientmsg.Req_ConnectBS")
	proto.RegisterType((*Rlt_ConnectBS)(nil), "clientmsg.Rlt_ConnectBS")
	proto.RegisterType((*Rlt_StartBattle)(nil), "clientmsg.Rlt_StartBattle")
	proto.RegisterType((*Rlt_StartBattle_MemberInfo)(nil), "clientmsg.Rlt_StartBattle.MemberInfo")
	proto.RegisterType((*Transfer_Command)(nil), "clientmsg.Transfer_Command")
	proto.RegisterType((*Transfer_Command_Message)(nil), "clientmsg.Transfer_Command.Message")
	proto.RegisterType((*Req_EndBattle)(nil), "clientmsg.Req_EndBattle")
	proto.RegisterType((*Rlt_EndBattle)(nil), "clientmsg.Rlt_EndBattle")
	proto.RegisterEnum("clientmsg.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("clientmsg.Type_LoginRetCode", Type_LoginRetCode_name, Type_LoginRetCode_value)
	proto.RegisterEnum("clientmsg.Type_GameRetCode", Type_GameRetCode_name, Type_GameRetCode_value)
	proto.RegisterEnum("clientmsg.MatchActionType", MatchActionType_name, MatchActionType_value)
	proto.RegisterEnum("clientmsg.MatchModeType", MatchModeType_name, MatchModeType_value)
	proto.RegisterEnum("clientmsg.Type_BattleRetCode", Type_BattleRetCode_name, Type_BattleRetCode_value)
	proto.RegisterEnum("clientmsg.Type_BattleEndTypeID", Type_BattleEndTypeID_name, Type_BattleEndTypeID_value)
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x36, 0x25, 0x59, 0x87, 0xd1, 0xc1, 0xeb, 0x75, 0xe2, 0xe8, 0xf7, 0xdf, 0xa6, 0x82, 0x9a,
	0x16, 0xaa, 0xd0, 0x28, 0x45, 0x80, 0x00, 0x6d, 0x6e, 0x0a, 0x8a, 0x62, 0x64, 0x36, 0x3c, 0xa8,
	0xcb, 0x4d, 0xd2, 0x00, 0x05, 0x08, 0xd6, 0x5c, 0x2b, 0x02, 0x24, 0x32, 0x25, 0x99, 0x06, 0xe9,
	0x45, 0xaf, 0xfa, 0x1c, 0x7d, 0x84, 0x5e, 0xf7, 0xf1, 0x8a, 0x3d, 0xc8, 0xa4, 0x24, 0xf7, 0x22,
	0x57, 0xd6, 0x7c, 0x33, 0xf3, 0xcd, 0xcc, 0x37, 0xc3, 0x35, 0x74, 0x37, 0x2c, 0xcb, 0xc2, 0x25,
	0x9b, 0xbc, 0x4d, 0x93, 0x3c, 0xc1, 0xad, 0xab, 0xf5, 0x8a, 0xc5, 0xf9, 0x26, 0x5b, 0x0e, 0x31,
	0xd4, 0x16, 0xab, 0x78, 0x89, 0x01, 0x2a, 0xd6, 0xac, 0xaf, 0x0d, 0x2a, 0xa3, 0xae, 0xc0, 0x92,
	0x1b, 0xac, 0x22, 0xb0, 0xfb, 0xd0, 0x23, 0xec, 0xd7, 0xc0, 0x67, 0xe9, 0x6f, 0x2c, 0xa5, 0xab,
	0x0d, 0xc3, 0x1d, 0xa8, 0xf1, 0xbf, 0x2a, 0x87, 0xfb, 0xd7, 0xf9, 0x6d, 0x7e, 0x99, 0x1f, 0x42,
	0x87, 0xe7, 0x13, 0xb6, 0x5c, 0x65, 0x39, 0x4b, 0x31, 0x82, 0xe6, 0x8b, 0x8c, 0xa5, 0x6e, 0xa8,
	0x18, 0x5a, 0x1c, 0x59, 0x84, 0x59, 0xf6, 0x3e, 0x49, 0x23, 0x91, 0xd3, 0xc2, 0x77, 0xa1, 0x6b,
	0x88, 0x46, 0x5f, 0xb2, 0x34, 0x5b, 0x25, 0x71, 0xbf, 0x3a, 0xa8, 0x8c, 0x8e, 0xf1, 0x39, 0x34,
	0xac, 0xcc, 0x4e, 0x96, 0xab, 0xb8, 0x5f, 0x1b, 0x54, 0x46, 0xcd, 0xa7, 0xc7, 0xd7, 0xe1, 0x3a,
	0x63, 0xa2, 0xc4, 0x3a, 0x2f, 0x4a, 0x3c, 0x84, 0x06, 0x61, 0xb9, 0x91, 0x44, 0xb2, 0x42, 0xef,
	0xf1, 0x27, 0x93, 0x9b, 0xb9, 0x27, 0xf4, 0xc3, 0x5b, 0x16, 0x08, 0x12, 0x15, 0x83, 0x7b, 0x50,
	0xe7, 0x1d, 0x89, 0x89, 0xb5, 0x51, 0x0b, 0x63, 0x00, 0x9f, 0x65, 0xbc, 0xee, 0x73, 0xf6, 0xa1,
	0x5f, 0x1d, 0x68, 0xa3, 0xce, 0xf0, 0x41, 0x59, 0x05, 0x7b, 0x95, 0xe5, 0x18, 0x43, 0xc3, 0x78,
	0x13, 0xc6, 0x31, 0x5b, 0x8b, 0x22, 0xc7, 0x4f, 0xb5, 0x6f, 0x86, 0xff, 0x68, 0x65, 0x31, 0x44,
	0xd8, 0x19, 0xb4, 0xa5, 0x65, 0x24, 0xef, 0xe2, 0x5c, 0x86, 0xe2, 0x6f, 0x79, 0x85, 0x6d, 0x48,
	0xbf, 0x32, 0xa8, 0x8e, 0xda, 0x8f, 0x1f, 0x94, 0x7a, 0xdc, 0xe5, 0x98, 0xc8, 0x9f, 0x56, 0x7c,
	0x9d, 0x5c, 0xbc, 0xda, 0x66, 0x72, 0x8b, 0x2b, 0xa7, 0xac, 0x99, 0x62, 0xc6, 0x5b, 0xbf, 0xd0,
	0x57, 0xaa, 0xd9, 0x83, 0xba, 0x9f, 0x87, 0xf9, 0xbb, 0x4c, 0xc9, 0x78, 0x06, 0x6d, 0x23, 0x89,
	0x63, 0x76, 0x95, 0xeb, 0x51, 0x94, 0x0a, 0x29, 0x5b, 0x43, 0x1d, 0x5a, 0x7c, 0x40, 0x21, 0x4c,
	0x49, 0x11, 0xb9, 0xa1, 0x5d, 0x45, 0x38, 0x6b, 0x67, 0xa7, 0xb6, 0xe0, 0x1d, 0x86, 0xd0, 0xe2,
	0x8d, 0x4b, 0x8a, 0xaf, 0xf7, 0x77, 0xf0, 0xff, 0xfd, 0x1d, 0xcc, 0xc3, 0x0d, 0x2b, 0xad, 0xc0,
	0x78, 0x13, 0x16, 0x2b, 0x38, 0x87, 0x9e, 0x95, 0xb9, 0xec, 0x3d, 0x07, 0xc3, 0xab, 0x9c, 0xa5,
	0x62, 0x0d, 0xcd, 0x61, 0x20, 0xbb, 0x74, 0xc2, 0xfc, 0xea, 0x0d, 0x1e, 0x43, 0x5d, 0xbf, 0xca,
	0xf9, 0x79, 0xc8, 0x0a, 0x17, 0xa5, 0x0a, 0x22, 0x42, 0x7a, 0x79, 0x31, 0xfc, 0x25, 0xd4, 0x1c,
	0xde, 0x4b, 0x45, 0x44, 0xf6, 0xf7, 0x23, 0xb9, 0x8f, 0xc7, 0x0d, 0xbf, 0x93, 0x33, 0xc8, 0x02,
	0x1f, 0x35, 0xc3, 0x70, 0x01, 0xf7, 0x78, 0xaa, 0x9b, 0xe4, 0xab, 0xeb, 0x0f, 0xd3, 0x30, 0xcf,
	0xd7, 0x8c, 0xeb, 0xcb, 0xb2, 0x8c, 0x8f, 0x47, 0x92, 0x64, 0x53, 0xde, 0x52, 0x11, 0xa0, 0xb6,
	0x74, 0x0a, 0x2d, 0x89, 0xc9, 0xa3, 0xab, 0x8c, 0x3a, 0xc3, 0x29, 0x74, 0xf9, 0xb4, 0x6a, 0x59,
	0x53, 0xff, 0x80, 0x67, 0x27, 0x47, 0xae, 0xa5, 0x50, 0xb2, 0x2a, 0xf6, 0xfa, 0x3d, 0x74, 0x79,
	0x57, 0x05, 0xc7, 0x64, 0x7f, 0xa8, 0x4f, 0xf7, 0x87, 0x92, 0x94, 0xdb, 0xb1, 0xfe, 0xd6, 0xe0,
	0x44, 0xdc, 0x63, 0x1e, 0xa6, 0xb9, 0x74, 0xf1, 0xdd, 0x93, 0x30, 0x8e, 0x7c, 0xc6, 0x22, 0xd5,
	0xc9, 0x13, 0xa8, 0x3b, 0x6c, 0xf3, 0x0b, 0x4b, 0xd5, 0x35, 0x7f, 0xb1, 0x7f, 0xcd, 0x45, 0xf6,
	0x44, 0x06, 0x8a, 0x73, 0x26, 0x00, 0x85, 0x55, 0xea, 0xfd, 0xe6, 0x61, 0xe0, 0x76, 0xe9, 0x94,
	0x15, 0xc2, 0xdb, 0x54, 0xc7, 0x8c, 0xa0, 0x49, 0x59, 0xb8, 0x11, 0x48, 0x4d, 0x9c, 0xe1, 0x9f,
	0x1a, 0x20, 0x9a, 0x86, 0x71, 0x76, 0xcd, 0xd2, 0xc0, 0x48, 0x36, 0x9b, 0x30, 0x8e, 0x0e, 0xa8,
	0x9f, 0x40, 0xd3, 0x91, 0x2f, 0x63, 0xa6, 0x3a, 0xfe, 0xbc, 0x2c, 0xc3, 0x5e, 0xfa, 0x44, 0xc5,
	0x5e, 0x7c, 0x05, 0x0d, 0xf5, 0x13, 0x77, 0xe1, 0x78, 0x93, 0x2d, 0x57, 0x51, 0xbf, 0x3e, 0xd0,
	0x46, 0x5d, 0x7c, 0x02, 0x8d, 0x4d, 0xb6, 0x8c, 0xc2, 0x3c, 0xec, 0x37, 0xc4, 0x8b, 0xb1, 0x90,
	0xcb, 0x33, 0xe3, 0x48, 0x89, 0xf6, 0x08, 0xea, 0xbc, 0x4b, 0xd5, 0x42, 0xef, 0xf1, 0x67, 0xb7,
	0xeb, 0x6e, 0xc6, 0x91, 0x0c, 0xdb, 0xf9, 0x28, 0xf8, 0x2a, 0x3d, 0xb9, 0xca, 0x82, 0xf1, 0x23,
	0x57, 0xb9, 0x4f, 0x38, 0xfe, 0xab, 0x0a, 0x6d, 0x35, 0x8e, 0xf8, 0x48, 0xda, 0xd0, 0x70, 0x68,
	0xb0, 0xb0, 0xdc, 0x39, 0x3a, 0xda, 0x1a, 0x9e, 0x3b, 0x47, 0x1a, 0xbe, 0x0b, 0xa7, 0x0e, 0x0d,
	0x88, 0xf9, 0x63, 0xe0, 0x9b, 0xe4, 0xa5, 0x49, 0xa8, 0xe5, 0x98, 0xa8, 0xb2, 0x85, 0x6d, 0x5a,
	0x86, 0xab, 0xf8, 0x0c, 0x4e, 0x54, 0x34, 0x31, 0xe7, 0x96, 0x4f, 0x4d, 0x82, 0x6a, 0x5b, 0xd0,
	0xa6, 0x05, 0x78, 0x7c, 0xc0, 0x6b, 0x5b, 0x3e, 0x45, 0xf5, 0x03, 0x5e, 0x01, 0x37, 0x30, 0x82,
	0x8e, 0x8a, 0xb6, 0xbd, 0xb9, 0xe5, 0xa2, 0xe6, 0x16, 0xb1, 0xa9, 0x42, 0x5a, 0xa5, 0x18, 0x47,
	0xa7, 0xc6, 0x25, 0x82, 0x52, 0x8c, 0x44, 0xda, 0xf8, 0x3e, 0x5c, 0x28, 0xc4, 0xf5, 0xa8, 0xf5,
	0xec, 0xf5, 0x54, 0xa7, 0xd4, 0x36, 0xf5, 0xd9, 0x8c, 0x98, 0xbe, 0x8f, 0x3a, 0xf8, 0x0e, 0x20,
	0xc5, 0x61, 0x78, 0xae, 0x6b, 0x1a, 0x74, 0xea, 0xa3, 0xee, 0x16, 0xb5, 0x69, 0x09, 0xed, 0xe1,
	0x73, 0xc0, 0xdb, 0x56, 0xa9, 0x4e, 0xa8, 0xa4, 0x42, 0x27, 0x25, 0x0e, 0xd3, 0x9d, 0x29, 0x14,
	0x95, 0x38, 0x0a, 0xf4, 0x14, 0xdf, 0x83, 0x33, 0x87, 0x06, 0x94, 0xe8, 0xae, 0xff, 0xcc, 0x24,
	0x81, 0xe1, 0x39, 0x8e, 0xee, 0xce, 0x10, 0x1e, 0xff, 0x0e, 0xa7, 0x87, 0xff, 0xae, 0x3a, 0xd0,
	0xb4, 0x89, 0x11, 0xb8, 0x9e, 0x6b, 0xa2, 0x23, 0x2e, 0x15, 0xb7, 0x74, 0xc3, 0xf0, 0x5e, 0xb8,
	0x34, 0x30, 0x7f, 0xe2, 0x52, 0x69, 0xf8, 0x7f, 0x70, 0xb7, 0x0c, 0xbb, 0xde, 0xd6, 0x55, 0xe1,
	0x1d, 0x73, 0xd7, 0x42, 0xf7, 0xfd, 0x57, 0x1e, 0x99, 0x05, 0x26, 0x21, 0x1e, 0x41, 0x55, 0xdc,
	0x85, 0x16, 0xc7, 0x3d, 0x7a, 0x69, 0x12, 0x14, 0x8d, 0x7f, 0x06, 0x74, 0xf0, 0x4c, 0x77, 0xa0,
	0x39, 0x2f, 0x4a, 0x9f, 0x03, 0xe6, 0x96, 0x50, 0x95, 0x6b, 0x42, 0x2d, 0xf7, 0x85, 0x89, 0x80,
	0x6f, 0xba, 0xc0, 0x25, 0x7b, 0x9b, 0xb3, 0xcf, 0x4b, 0xec, 0x8f, 0xe0, 0x64, 0xff, 0x89, 0xee,
	0x40, 0xd3, 0xd1, 0x69, 0xf0, 0x83, 0x67, 0xb9, 0xe8, 0x08, 0xf7, 0x00, 0xb8, 0x65, 0xe8, 0xae,
	0x61, 0xda, 0x48, 0x1b, 0x3f, 0x84, 0xee, 0xce, 0x4b, 0x2d, 0x02, 0x1c, 0x3e, 0x19, 0x71, 0x74,
	0x1b, 0x1d, 0x89, 0x74, 0xae, 0xad, 0xee, 0x3e, 0x47, 0xda, 0xf8, 0x0f, 0xc0, 0xb7, 0x7c, 0x00,
	0x1d, 0x68, 0x4e, 0x8b, 0xfe, 0xef, 0xc1, 0x19, 0xb7, 0xe4, 0x1a, 0x9e, 0x9b, 0xaf, 0x55, 0xaf,
	0x1a, 0x1f, 0x8c, 0x3b, 0x88, 0xe7, 0x39, 0x3b, 0xca, 0x5d, 0xc0, 0x39, 0xc7, 0x8d, 0x4b, 0x9d,
	0x58, 0x33, 0xe1, 0xb1, 0x5c, 0x11, 0x25, 0xd5, 0x9b, 0x96, 0xe6, 0x7b, 0x02, 0x77, 0xfe, 0xe3,
	0x9b, 0x86, 0xa9, 0x69, 0x04, 0xcf, 0x2c, 0xd7, 0xf2, 0x2f, 0xd1, 0x91, 0x48, 0x33, 0x8d, 0x40,
	0x9f, 0x7a, 0x84, 0x22, 0xed, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x55, 0x36, 0xa3, 0xbc, 0xaf,
	0x09, 0x00, 0x00,
}
